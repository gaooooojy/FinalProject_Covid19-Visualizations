import React, { Component } from 'react';
import * as echarts from 'echarts';
class PieLineChart extends Component {
    constructor(props){
        super(props)
        this.state={

        }
    }
    componentDidMount() {
        let myChart=echarts.init(document.getElementById('main'));
        let option = {
            title: {
                text: 'New cases by different age groups of EU/EAA Member states',
                left: 'center'
            },
            legend: {
                top: '8%'
            },
            toolbox: {
                feature: {
                    restore: {},
                    saveAsImage: {},
                },
                right: '12%'
            },
            tooltip: {
                trigger: 'axis',
            },
            dataset: {
                source: [
                    ['year-week', '2020-01','2020-02','2020-03','2020-04','2020-05','2020-06','2020-07','2020-08',
                        '2020-09', '2020-10','2020-11','2020-12','2020-13','2020-14','2020-15','2020-16','2020-17',
                        '2020-18','2020-19','2020-20', '2020-21','2020-22','2020-23','2020-24','2020-25','2020-26',
                        '2020-27','2020-28','2020-29','2020-30','2020-31', '2020-32','2020-33','2020-34','2020-35',
                        '2020-36','2020-37','2020-38','2020-39','2020-40','2020-41','2020-42', '2020-43','2020-44',
                        '2020-45','2020-46','2020-47','2020-48','2020-49','2020-50','2020-51','2020-52','2020-53',
                        '2021-01','2021-02','2021-03','2021-04','2021-05','2021-06','2021-07','2021-08','2021-09',
                        '2021-10','2021-11','2021-12','2021-13','2021-14','2021-15','2021-16','2021-17','2021-18',
                        '2021-19','2021-20', '2021-21','2021-22','2021-23','2021-24','2021-25','2021-26','2021-27',
                        '2021-28','2021-29','2021-30'],
                    ['<15yr', 0,0,0,0,3,4,1,7,53,345,880,1457,2685,2283,2117,1666,1645,1360,1282,1223,1353,1343,1333,
                        1502,1866,1969,1933,2399,3021,4277,5376,7017,8921,10979,12956,15709,21639,25797,24892,24919,
                        35454,52636,74356,88490,93929,82169,71262,62032,57919,63537,69342,54737,58416,74228,79075,
                        88350,85836,73812,63555,64631,74311,79839,87413,98707,112046,102387,84526,93284,95766,86018,
                        75792,58516,50757,37327,30038,20469,13466,11065,14393,24753,40204,54439,58289,52808],
                    ['15-24yr', 0,0,0,0,1,4,1,15,166,749,2596,4781,7840,7328,6828,5287,4487,3071,2661,2316,2466,
                        2591,2505,2721,3567,3792,3505,4001,5780,7510,10135,14193,19524,26113,29859,33848,40458,
                        49741,51384,54965,79476,111197,152507,169071,161827,128944,104971,87790,82785,94444,105529,
                        85596,103984,139664,115082,105309,92521,80084,69414,74142,85686,90993,102026,112530,126451,
                        122429,114222,119635,111358,93050,83875,63757,56772,42409,35255,24855,20383,25355,59481,
                        112441,148444,150151,128285,97905],
                    ['25-49yr', 0,0,0,3,21,34,47,134,1105,5397,25547,43271,48735,39756,35097,25860,20583,14190,
                        12106,10579,10591,9891,9775,10212,11627,12198,10836,12617,16557,21470,26742,36005,44592,
                        58388,67096,76666,88033,101756,105496,120073,186637,279532,425915,504602,485175,400228,
                        344663,296519,282163,312187,359397,290193,346303,414875,360411,343515,302433,260010,226660,
                        239472,270526,280774,314941,342538,366884,349443,319375,316581,293896,246630,209645,159904,
                        133245,98336,77470,56854,41833,41077,66966,113050,165810,191010,182328,157068],
                    ['50-64yr', 0,0,0,0,10,19,36,119,1053,5683,23602,41363,43809,33292,27258,18922,14357,9569,8030,
                        6369,6253,5657,5273,5232,5570,5672,4863,5425,6832,8986,11023,14017,16637,21539,25609,31366,
                        38254,44907,47966,56961,92202,141559,221504,279773,283529,241820,207794,177155,167255,
                        182691,211262,174363,200768,233023,213732,203009,177476,148247,126090,129319,145829,151373,
                        170528,184418,192082,187163,171815,166776,154248,127694,104627,78603,59926,42109,31051,
                        21986,14527,12636,15656,25690,40685,51609,53236,49831],
                    ['65-79yr', 0,0,0,0,8,20,45,125,1119,5587,18815,28575,29342,20894,17223,11956,8852,5695,4194,
                        3013,3354,2776,2496,2461,2446,2264,2117,2487,3044,4081,4641,5999,6834,8699,10744,13419,
                        16685,19483,21167,24628,39362,62084,98831,128278,135148,118107,100979,86459,80678,87248,
                        102707,86617,103656,120352,109923,102735,92014,76764,63734,64395,71976,74785,83175,90298,
                        90968,91007,80321,78539,67263,54464,42671,31208,22089,14485,10720,8591,5936,5186,5970,9016,
                        13670,18745,20799,20467],
                    ['80+yr', 1,0,0,2,8,12,29,93,667,3269,10510,18772,25813,27684,32319,24140,17657,9949,5939,4501,
                        4432,3372,2484,2048,1837,1574,1350,1244,1483,1983,2457,3037,3768,4249,5138,6903,8754,10575,
                        10602,12853,20985,32898,58990,77432,83130,80729,74459,66970,63649,68107,74002,60922,65980,
                        78151,78306,72133,62031,48805,35608,32261,31246,28993,30655,32355,33095,31444,26625,25819,
                        22852,17902,13858,10358,7740,5378,4096,3308,2394,2005,2354,3200,5757,8667,9665,9656],
                ]
            },
            xAxis: {type: 'category'},
            yAxis: {gridIndex: 0},
            grid: {top: '55%', left: '10%'},
            series: [
                {type: 'line', smooth: true, seriesLayoutBy: 'row', emphasis: {focus: 'series'}},
                {type: 'line', smooth: true, seriesLayoutBy: 'row', emphasis: {focus: 'series'}},
                {type: 'line', smooth: true, seriesLayoutBy: 'row', emphasis: {focus: 'series'}},
                {type: 'line', smooth: true, seriesLayoutBy: 'row', emphasis: {focus: 'series'}},
                {type: 'line', smooth: true, seriesLayoutBy: 'row', emphasis: {focus: 'series'}},
                {type: 'line', smooth: true, seriesLayoutBy: 'row', emphasis: {focus: 'series'}},
                {
                    type: 'pie',
                    id: 'pie',
                    radius: '30%',
                    center: ['50%', '35%'],
                    emphasis: {focus: 'data'},
                    label: {
                        formatter: '{b}: {@2020-01} ({d}%)'
                    },
                    encode: {
                        itemName: 'year-week',
                        value: '2020-01',
                        tooltip: '2020-01'
                    }
                }
            ]
        };
        myChart.on('updateAxisPointer', function (event) {
            var xAxisInfo = event.axesInfo[0];
            if (xAxisInfo) {
                var dimension = xAxisInfo.value + 1;
                myChart.setOption({
                    series: {
                        id: 'pie',
                        label: {
                            formatter: '{b}: {@[' + dimension + ']} ({d}%)'
                        },
                        encode: {
                            value: dimension,
                            tooltip: dimension
                        }
                    }
                });
            }
        });
        myChart.setOption(option);

    }
    render() {
        return (
            <div id="main" style={{ height: 750,width: 1100,marginLeft:"10px"}}></div>
        );
    }
}

export default PieLineChart;
