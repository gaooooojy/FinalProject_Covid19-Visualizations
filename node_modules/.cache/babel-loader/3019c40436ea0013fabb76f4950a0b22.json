{"ast":null,"code":"import * as matrix from './matrix';\nimport * as vector from './vector';\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n\nvar scaleTmp = [];\nvar tmpTransform = [];\nvar originTransform = matrix.create();\nvar abs = Math.abs;\n\nvar Transformable = function () {\n  function Transformable() {}\n\n  Transformable.prototype.setPosition = function (arr) {\n    this.x = arr[0];\n    this.y = arr[1];\n  };\n\n  Transformable.prototype.setScale = function (arr) {\n    this.scaleX = arr[0];\n    this.scaleY = arr[1];\n  };\n\n  Transformable.prototype.setSkew = function (arr) {\n    this.skewX = arr[0];\n    this.skewY = arr[1];\n  };\n\n  Transformable.prototype.setOrigin = function (arr) {\n    this.originX = arr[0];\n    this.originY = arr[1];\n  };\n\n  Transformable.prototype.needLocalTransform = function () {\n    return isNotAroundZero(this.rotation) || isNotAroundZero(this.x) || isNotAroundZero(this.y) || isNotAroundZero(this.scaleX - 1) || isNotAroundZero(this.scaleY - 1);\n  };\n\n  Transformable.prototype.updateTransform = function () {\n    var parent = this.parent;\n    var parentHasTransform = parent && parent.transform;\n    var needLocalTransform = this.needLocalTransform();\n    var m = this.transform;\n\n    if (!(needLocalTransform || parentHasTransform)) {\n      m && mIdentity(m);\n      return;\n    }\n\n    m = m || matrix.create();\n\n    if (needLocalTransform) {\n      this.getLocalTransform(m);\n    } else {\n      mIdentity(m);\n    }\n\n    if (parentHasTransform) {\n      if (needLocalTransform) {\n        matrix.mul(m, parent.transform, m);\n      } else {\n        matrix.copy(m, parent.transform);\n      }\n    }\n\n    this.transform = m;\n\n    this._resolveGlobalScaleRatio(m);\n  };\n\n  Transformable.prototype._resolveGlobalScaleRatio = function (m) {\n    var globalScaleRatio = this.globalScaleRatio;\n\n    if (globalScaleRatio != null && globalScaleRatio !== 1) {\n      this.getGlobalScale(scaleTmp);\n      var relX = scaleTmp[0] < 0 ? -1 : 1;\n      var relY = scaleTmp[1] < 0 ? -1 : 1;\n      var sx = ((scaleTmp[0] - relX) * globalScaleRatio + relX) / scaleTmp[0] || 0;\n      var sy = ((scaleTmp[1] - relY) * globalScaleRatio + relY) / scaleTmp[1] || 0;\n      m[0] *= sx;\n      m[1] *= sx;\n      m[2] *= sy;\n      m[3] *= sy;\n    }\n\n    this.invTransform = this.invTransform || matrix.create();\n    matrix.invert(this.invTransform, m);\n  };\n\n  Transformable.prototype.getLocalTransform = function (m) {\n    return Transformable.getLocalTransform(this, m);\n  };\n\n  Transformable.prototype.getComputedTransform = function () {\n    var transformNode = this;\n    var ancestors = [];\n\n    while (transformNode) {\n      ancestors.push(transformNode);\n      transformNode = transformNode.parent;\n    }\n\n    while (transformNode = ancestors.pop()) {\n      transformNode.updateTransform();\n    }\n\n    return this.transform;\n  };\n\n  Transformable.prototype.setLocalTransform = function (m) {\n    if (!m) {\n      return;\n    }\n\n    var sx = m[0] * m[0] + m[1] * m[1];\n    var sy = m[2] * m[2] + m[3] * m[3];\n    var rotation = Math.atan2(m[1], m[0]);\n    var shearX = Math.PI / 2 + rotation - Math.atan2(m[3], m[2]);\n    sy = Math.sqrt(sy) * Math.cos(shearX);\n    sx = Math.sqrt(sx);\n    this.skewX = shearX;\n    this.skewY = 0;\n    this.rotation = -rotation;\n    this.x = +m[4];\n    this.y = +m[5];\n    this.scaleX = sx;\n    this.scaleY = sy;\n    this.originX = 0;\n    this.originY = 0;\n  };\n\n  Transformable.prototype.decomposeTransform = function () {\n    if (!this.transform) {\n      return;\n    }\n\n    var parent = this.parent;\n    var m = this.transform;\n\n    if (parent && parent.transform) {\n      matrix.mul(tmpTransform, parent.invTransform, m);\n      m = tmpTransform;\n    }\n\n    var ox = this.originX;\n    var oy = this.originY;\n\n    if (ox || oy) {\n      originTransform[4] = ox;\n      originTransform[5] = oy;\n      matrix.mul(tmpTransform, m, originTransform);\n      tmpTransform[4] -= ox;\n      tmpTransform[5] -= oy;\n      m = tmpTransform;\n    }\n\n    this.setLocalTransform(m);\n  };\n\n  Transformable.prototype.getGlobalScale = function (out) {\n    var m = this.transform;\n    out = out || [];\n\n    if (!m) {\n      out[0] = 1;\n      out[1] = 1;\n      return out;\n    }\n\n    out[0] = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n    out[1] = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n    if (m[0] < 0) {\n      out[0] = -out[0];\n    }\n\n    if (m[3] < 0) {\n      out[1] = -out[1];\n    }\n\n    return out;\n  };\n\n  Transformable.prototype.transformCoordToLocal = function (x, y) {\n    var v2 = [x, y];\n    var invTransform = this.invTransform;\n\n    if (invTransform) {\n      vector.applyTransform(v2, v2, invTransform);\n    }\n\n    return v2;\n  };\n\n  Transformable.prototype.transformCoordToGlobal = function (x, y) {\n    var v2 = [x, y];\n    var transform = this.transform;\n\n    if (transform) {\n      vector.applyTransform(v2, v2, transform);\n    }\n\n    return v2;\n  };\n\n  Transformable.prototype.getLineScale = function () {\n    var m = this.transform;\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  };\n\n  Transformable.getLocalTransform = function (target, m) {\n    m = m || [];\n    var ox = target.originX || 0;\n    var oy = target.originY || 0;\n    var sx = target.scaleX;\n    var sy = target.scaleY;\n    var rotation = target.rotation || 0;\n    var x = target.x;\n    var y = target.y;\n    var skewX = target.skewX ? Math.tan(target.skewX) : 0;\n    var skewY = target.skewY ? Math.tan(-target.skewY) : 0;\n\n    if (ox || oy) {\n      m[4] = -ox * sx - skewX * oy * sy;\n      m[5] = -oy * sy - skewY * ox * sx;\n    } else {\n      m[4] = m[5] = 0;\n    }\n\n    m[0] = sx;\n    m[3] = sy;\n    m[1] = skewY * sx;\n    m[2] = skewX * sy;\n    rotation && matrix.rotate(m, m, rotation);\n    m[4] += ox + x;\n    m[5] += oy + y;\n    return m;\n  };\n\n  Transformable.initDefaultProps = function () {\n    var proto = Transformable.prototype;\n    proto.x = 0;\n    proto.y = 0;\n    proto.scaleX = 1;\n    proto.scaleY = 1;\n    proto.originX = 0;\n    proto.originY = 0;\n    proto.skewX = 0;\n    proto.skewY = 0;\n    proto.rotation = 0;\n    proto.globalScaleRatio = 1;\n  }();\n\n  return Transformable;\n}();\n\n;\nexport default Transformable;","map":{"version":3,"sources":["C:/Users/gaooooojy/Desktop/project/node_modules/zrender/lib/core/Transformable.js"],"names":["matrix","vector","mIdentity","identity","EPSILON","isNotAroundZero","val","scaleTmp","tmpTransform","originTransform","create","abs","Math","Transformable","prototype","setPosition","arr","x","y","setScale","scaleX","scaleY","setSkew","skewX","skewY","setOrigin","originX","originY","needLocalTransform","rotation","updateTransform","parent","parentHasTransform","transform","m","getLocalTransform","mul","copy","_resolveGlobalScaleRatio","globalScaleRatio","getGlobalScale","relX","relY","sx","sy","invTransform","invert","getComputedTransform","transformNode","ancestors","push","pop","setLocalTransform","atan2","shearX","PI","sqrt","cos","decomposeTransform","ox","oy","out","transformCoordToLocal","v2","applyTransform","transformCoordToGlobal","getLineScale","target","tan","rotate","initDefaultProps","proto"],"mappings":"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","sourcesContent":["import * as matrix from './matrix';\nimport * as vector from './vector';\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\nfunction isNotAroundZero(val) {\n    return val > EPSILON || val < -EPSILON;\n}\nvar scaleTmp = [];\nvar tmpTransform = [];\nvar originTransform = matrix.create();\nvar abs = Math.abs;\nvar Transformable = (function () {\n    function Transformable() {\n    }\n    Transformable.prototype.setPosition = function (arr) {\n        this.x = arr[0];\n        this.y = arr[1];\n    };\n    Transformable.prototype.setScale = function (arr) {\n        this.scaleX = arr[0];\n        this.scaleY = arr[1];\n    };\n    Transformable.prototype.setSkew = function (arr) {\n        this.skewX = arr[0];\n        this.skewY = arr[1];\n    };\n    Transformable.prototype.setOrigin = function (arr) {\n        this.originX = arr[0];\n        this.originY = arr[1];\n    };\n    Transformable.prototype.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.x)\n            || isNotAroundZero(this.y)\n            || isNotAroundZero(this.scaleX - 1)\n            || isNotAroundZero(this.scaleY - 1);\n    };\n    Transformable.prototype.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n        m = m || matrix.create();\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        this.transform = m;\n        this._resolveGlobalScaleRatio(m);\n    };\n    Transformable.prototype._resolveGlobalScaleRatio = function (m) {\n        var globalScaleRatio = this.globalScaleRatio;\n        if (globalScaleRatio != null && globalScaleRatio !== 1) {\n            this.getGlobalScale(scaleTmp);\n            var relX = scaleTmp[0] < 0 ? -1 : 1;\n            var relY = scaleTmp[1] < 0 ? -1 : 1;\n            var sx = ((scaleTmp[0] - relX) * globalScaleRatio + relX) / scaleTmp[0] || 0;\n            var sy = ((scaleTmp[1] - relY) * globalScaleRatio + relY) / scaleTmp[1] || 0;\n            m[0] *= sx;\n            m[1] *= sx;\n            m[2] *= sy;\n            m[3] *= sy;\n        }\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n    Transformable.prototype.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n    Transformable.prototype.getComputedTransform = function () {\n        var transformNode = this;\n        var ancestors = [];\n        while (transformNode) {\n            ancestors.push(transformNode);\n            transformNode = transformNode.parent;\n        }\n        while (transformNode = ancestors.pop()) {\n            transformNode.updateTransform();\n        }\n        return this.transform;\n    };\n    Transformable.prototype.setLocalTransform = function (m) {\n        if (!m) {\n            return;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var rotation = Math.atan2(m[1], m[0]);\n        var shearX = Math.PI / 2 + rotation - Math.atan2(m[3], m[2]);\n        sy = Math.sqrt(sy) * Math.cos(shearX);\n        sx = Math.sqrt(sx);\n        this.skewX = shearX;\n        this.skewY = 0;\n        this.rotation = -rotation;\n        this.x = +m[4];\n        this.y = +m[5];\n        this.scaleX = sx;\n        this.scaleY = sy;\n        this.originX = 0;\n        this.originY = 0;\n    };\n    Transformable.prototype.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var ox = this.originX;\n        var oy = this.originY;\n        if (ox || oy) {\n            originTransform[4] = ox;\n            originTransform[5] = oy;\n            matrix.mul(tmpTransform, m, originTransform);\n            tmpTransform[4] -= ox;\n            tmpTransform[5] -= oy;\n            m = tmpTransform;\n        }\n        this.setLocalTransform(m);\n    };\n    Transformable.prototype.getGlobalScale = function (out) {\n        var m = this.transform;\n        out = out || [];\n        if (!m) {\n            out[0] = 1;\n            out[1] = 1;\n            return out;\n        }\n        out[0] = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        out[1] = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            out[0] = -out[0];\n        }\n        if (m[3] < 0) {\n            out[1] = -out[1];\n        }\n        return out;\n    };\n    Transformable.prototype.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n    Transformable.prototype.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n    Transformable.prototype.getLineScale = function () {\n        var m = this.transform;\n        return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n            ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n            : 1;\n    };\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        var ox = target.originX || 0;\n        var oy = target.originY || 0;\n        var sx = target.scaleX;\n        var sy = target.scaleY;\n        var rotation = target.rotation || 0;\n        var x = target.x;\n        var y = target.y;\n        var skewX = target.skewX ? Math.tan(target.skewX) : 0;\n        var skewY = target.skewY ? Math.tan(-target.skewY) : 0;\n        if (ox || oy) {\n            m[4] = -ox * sx - skewX * oy * sy;\n            m[5] = -oy * sy - skewY * ox * sx;\n        }\n        else {\n            m[4] = m[5] = 0;\n        }\n        m[0] = sx;\n        m[3] = sy;\n        m[1] = skewY * sx;\n        m[2] = skewX * sy;\n        rotation && matrix.rotate(m, m, rotation);\n        m[4] += ox + x;\n        m[5] += oy + y;\n        return m;\n    };\n    Transformable.initDefaultProps = (function () {\n        var proto = Transformable.prototype;\n        proto.x = 0;\n        proto.y = 0;\n        proto.scaleX = 1;\n        proto.scaleY = 1;\n        proto.originX = 0;\n        proto.originY = 0;\n        proto.skewX = 0;\n        proto.skewY = 0;\n        proto.rotation = 0;\n        proto.globalScaleRatio = 1;\n    })();\n    return Transformable;\n}());\n;\nexport default Transformable;\n"]},"metadata":{},"sourceType":"module"}