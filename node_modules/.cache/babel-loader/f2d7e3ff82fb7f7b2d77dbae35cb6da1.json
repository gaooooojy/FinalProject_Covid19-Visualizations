{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaooooojy\\\\Desktop\\\\project\\\\src\\\\dashboard\\\\dashboard.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport { List, Typography } from 'antd';\nimport './dashboard.css';\nimport { GlobalOutlined, LinkOutlined } from '@ant-design/icons';\nimport GlobalWeekly from \"../global-weekly/global-weekly\";\nimport GlobalDaily from \"../global-daily/global-daily\";\nimport GlobalDailyDeaths from \"../global-daily-deaths/global-daily-deaths\";\nimport Map from '../map/map';\nimport MapDeaths from '../map-deaths/map-deaths';\nimport StuckColumnChart from '../stuck-column-chart/stuck-column-chart';\nimport StuckColumnChartDeaths from \"../stuck-column-chart-deaths/stuck-column-chart-deaths\";\nimport StuckColumnChartCountries from \"../stuck-column-chart-countries/stuck-column-chart-countries\";\nimport StuckColumnChartCountriesDeaths from \"../stuck-column-chart-countries-deaths/stuck-column-chart-countries-deaths\";\nimport LineChartContinent from \"../line-chart-continent/line-chart-continent\";\nimport LineChartContinentDeaths from \"../line-chart-continent-deaths/line-chart-continent-deaths\";\nimport LineChartCountries from \"../line-chart-countries/line-chart-countries\";\nimport LineChartCountriesDeaths from \"../line-chart-countries-deaths/line-chart-countries-deaths\";\nimport Brazil from \"../country-Brazil/country-Brazil\";\nimport China from \"../country-China/country-China\";\nimport France from \"../country-France/country-France\";\nimport India from \"../country-India/country-India\";\nimport Russia from \"../country-Russia/country-Russia\";\nimport UnitedKingdom from \"../country-UK/country-UK\";\nimport UnitedStatesOfAmerica from \"../country-USA/country-USA\";\nimport Heatmap from \"../heatmap/heatmap\";\nimport HeatmapDeaths from \"../heatmap-deaths/heatmap-deaths\";\nimport HeatmapCountries from \"../heatmap-countries/heatmap-countries\";\nimport HeatmapCountriesDeaths from \"../heatmap-countries-deaths/heatmap-countries-deaths\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst data = [['World Map of COVID-19 (Confirmed Cases)', \"The cumulative number of confirmed cases all over the world, displayed in a choropleth map. \" + \"The map is colored for countries by different depth of one color, \" + \"related to different degree of the total number of confirmed cases in countries\", \"/map\"], ['World Map of COVID-19 (Deaths)', \"The cumulative number of deaths all over the world, displayed in a choropleth map. \" + \"The map is colored for countries by different depth of one color, \" + \"related to different degree of the total number of deaths in countries\", \"/mapdeaths\"], ['Global Situation with Confirmed Cases and Deaths (weekly)', \"A basic column chart for both total confirmed cases and deaths all over the world.\" + \"The data is collected weekly. The column chart can be also changed into a line chart.\", \"/globalweekly\"], ['Global Situation with Confirmed Cases (daily)', \"A basic column chart for total confirmed cases and the average number of cases in 7 days all over the world.\" + \"The data is collected daily. The column chart can be also changed into a line chart.\" + \"It can also be chosen to zoom on a specific area and recover.\", \"/globaldaily\"], ['Global Situation with Deaths (daily)', \"A basic column chart for total deaths and the average number of deaths in 7 days all over the world.\" + \"The data is collected daily. The column chart can be also changed into a line chart.\" + \"It can also be chosen to zoom on a specific area and recover.\", \"/globaldailydeaths\"], ['Stuck Column Chart of Continents (Confirmed Cases)', \"A stuck column chart for total confirmed cases in 5 different continents: Asia, Europe, Americas,\" + \"Africa and Oceania. The data is collected weekly. \", \"/stuckcolumnchart\"], ['Stuck Column Chart of Continents (Deaths)', \"A stuck column chart for total deaths in 5 different continents: Asia, Europe, Americas,\" + \"Africa and Oceania. The data is collected weekly. \", \"/stuckcolumnchartdeaths\"], ['Line Chart of Continents (Confirmed Cases)', \"A basic line chart for showing total confirmed cases in 5 different continents: Asia, Europe, \" + \"Americas, Africa, Oceania. The data is collected weekly. The line chart can be also changed into a \" + \"column chart.\", \"/linechartscontinent\"], ['Line Chart of Continents (Deaths)', \"A basic line chart for showing total deaths in 5 different continents: Asia, Europe, \" + \"Americas, Africa, Oceania. The data is collected weekly. The line chart can be also changed into a \" + \"column chart.\", \"/linechartscontinentdeaths\"], ['Data on 14-day notification rate of new cases in per 100,000 people by Continents', \"A heatmap for showing the 14-day notification rate of new confirmed cases in every 100,000 people in \" + \"5 different continents: Asia, Europe, Americas, Africa, Oceania. The data is collected weekly.\", \"/heatmap\"], ['Data on 14-day notification rate of new deaths in per 100,000 people by Continents', \"A heatmap for showing the 14-day notification rate of new deaths in every 100,000 people in \" + \"5 different continents: Asia, Europe, Americas, Africa, Oceania. The data is collected weekly.\", \"/heatmapdeaths\"], ['Stuck Column Chart of Main Countries (Confirmed Cases)', \"A stuck column chart for total confirmed cases in 7 main countries: United States Of America, \" + \"India, Brazil, Russia, France, United Kingdom and China. The data is collected weekly.\", \"/stuckcolumnchartcountries\"], ['Stuck Column Chart of Main Countries (Deaths)', \"A stuck column chart for total deaths in 7 main countries: United States Of America, \" + \"India, Brazil, Russia, France, United Kingdom and China. The data is collected weekly.\", \"/stuckcolumnchartcountriesdeaths\"], ['Line Chart of Main Countries (Confirmed Cases)', \"A basic line chart for showing total confirmed cases in 7 main countries: United States Of America, India, \" + \"Brazil, Russia, France, United Kingdom and China. The data is collected weekly. \" + \"The line chart can be also changed into a column chart.\", \"/linechartscountries\"], ['Line Chart of Main Countries (Deaths)', \"A basic line chart for showing total deaths in 7 main countries: United States Of America, India, \" + \"Brazil, Russia, France, United Kingdom and China. The data is collected weekly. \" + \"The line chart can be also changed into a column chart.\", \"/linechartscountriesdeaths\"], ['Data on 14-day notification rate of new cases in per 100,000 people by Main Countries', \"A heatmap for showing the 14-day notification rate of new confirmed cases in every 100,000 people in \" + \"7 main countries: United States Of America, India, Brazil, Russia, France, United Kingdom and China. \" + \"The data is collected weekly.\", \"/heatmapcountries\"], ['Data on 14-day notification rate of new deaths in per 100,000 people by Main Countries', \"A heatmap for showing the 14-day notification rate of new deaths in every 100,000 people in \" + \"7 main countries: United States Of America, India, Brazil, Russia, France, United Kingdom and China. \" + \"The data is collected weekly.\", \"/heatmapcountriesdeaths\"]];\n\nclass Dashboard extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 3,\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"50px\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          alignContent: \"center\",\n          padding: \"16px 24px\",\n          width: \"1000px\",\n          height: \"50px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"200px\",\n            fontSize: \"20px\",\n            fontWeight: \"500\"\n          },\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"500px\",\n            fontSize: \"20px\",\n            fontWeight: \"500\"\n          },\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: \"20px\",\n            fontWeight: \"500\"\n          },\n          children: \"Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        title: \"Dashboard\",\n        size: \"large\",\n        bordered: true,\n        itemLayout: \"horizontal\",\n        dataSource: data,\n        style: {\n          marginLeft: \"30px\"\n        },\n        renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n          style: {\n            width: \"1000px\",\n            height: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"200px\"\n            },\n            children: item[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"500px\"\n            },\n            children: item[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: item[2],\n              children: /*#__PURE__*/_jsxDEV(LinkOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 37\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/map\",\n          component: Map\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/mapdeaths\",\n          component: MapDeaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/linechartscontinent\",\n          component: LineChartContinent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/linechartscontinentdeaths\",\n          component: LineChartContinentDeaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/linechartscontries\",\n          component: LineChartCountries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/linechartscontriesdeaths\",\n          component: LineChartCountriesDeaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Brazil\",\n          component: Brazil\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/China\",\n          component: China\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/France\",\n          component: France\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/India\",\n          component: India\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Russia\",\n          component: Russia\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/UnitedKingdom\",\n          component: UnitedKingdom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/UnitedStatesOfAmerica\",\n          component: UnitedStatesOfAmerica\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/globalweekly\",\n          component: GlobalWeekly\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/globaldaily\",\n          component: GlobalDaily\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/globaldailydeaths\",\n          component: GlobalDailyDeaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/stuckcolumnchart\",\n          component: StuckColumnChart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/stuckcolumnchartdeaths\",\n          component: StuckColumnChartDeaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/stuckcolumnchartcountries\",\n          component: StuckColumnChartCountries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/stuckcolumnchartcountriesdeaths\",\n          component: StuckColumnChartCountriesDeaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/heatmap\",\n          component: Heatmap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/heatmapdeaths\",\n          component: HeatmapDeaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/heatmapcountries\",\n          component: HeatmapCountries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/heatmapcountriesdeaths\",\n          component: HeatmapCountriesDeaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/gaooooojy/Desktop/project/src/dashboard/dashboard.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","List","Typography","GlobalOutlined","LinkOutlined","GlobalWeekly","GlobalDaily","GlobalDailyDeaths","Map","MapDeaths","StuckColumnChart","StuckColumnChartDeaths","StuckColumnChartCountries","StuckColumnChartCountriesDeaths","LineChartContinent","LineChartContinentDeaths","LineChartCountries","LineChartCountriesDeaths","Brazil","China","France","India","Russia","UnitedKingdom","UnitedStatesOfAmerica","Heatmap","HeatmapDeaths","HeatmapCountries","HeatmapCountriesDeaths","Title","data","Dashboard","render","marginLeft","display","justifyContent","alignItems","alignContent","padding","width","height","fontSize","fontWeight","item"],"mappings":"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","sourcesContent":["import React, { Component }from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { List, Typography} from 'antd';\r\nimport './dashboard.css'\r\nimport {GlobalOutlined, LinkOutlined} from '@ant-design/icons';\r\nimport GlobalWeekly from \"../global-weekly/global-weekly\";\r\nimport GlobalDaily from \"../global-daily/global-daily\";\r\nimport GlobalDailyDeaths from \"../global-daily-deaths/global-daily-deaths\";\r\nimport Map from '../map/map'\r\nimport MapDeaths from '../map-deaths/map-deaths'\r\nimport StuckColumnChart from '../stuck-column-chart/stuck-column-chart';\r\nimport StuckColumnChartDeaths from \"../stuck-column-chart-deaths/stuck-column-chart-deaths\";\r\nimport StuckColumnChartCountries from \"../stuck-column-chart-countries/stuck-column-chart-countries\";\r\nimport StuckColumnChartCountriesDeaths from \"../stuck-column-chart-countries-deaths/stuck-column-chart-countries-deaths\";\r\nimport LineChartContinent from \"../line-chart-continent/line-chart-continent\";\r\nimport LineChartContinentDeaths from \"../line-chart-continent-deaths/line-chart-continent-deaths\";\r\nimport LineChartCountries from \"../line-chart-countries/line-chart-countries\";\r\nimport LineChartCountriesDeaths from \"../line-chart-countries-deaths/line-chart-countries-deaths\";\r\nimport Brazil from \"../country-Brazil/country-Brazil\";\r\nimport China from \"../country-China/country-China\";\r\nimport France from \"../country-France/country-France\";\r\nimport India from \"../country-India/country-India\";\r\nimport Russia from \"../country-Russia/country-Russia\";\r\nimport UnitedKingdom from \"../country-UK/country-UK\";\r\nimport UnitedStatesOfAmerica from \"../country-USA/country-USA\";\r\nimport Heatmap from \"../heatmap/heatmap\";\r\nimport HeatmapDeaths from \"../heatmap-deaths/heatmap-deaths\";\r\nimport HeatmapCountries from \"../heatmap-countries/heatmap-countries\";\r\nimport HeatmapCountriesDeaths from \"../heatmap-countries-deaths/heatmap-countries-deaths\";\r\nconst { Title } = Typography;\r\nconst data = [\r\n\r\n    ['World Map of COVID-19 (Confirmed Cases)',\r\n        \"The cumulative number of confirmed cases all over the world, displayed in a choropleth map. \" +\r\n        \"The map is colored for countries by different depth of one color, \" +\r\n        \"related to different degree of the total number of confirmed cases in countries\",\"/map\"],\r\n\r\n    ['World Map of COVID-19 (Deaths)',\r\n        \"The cumulative number of deaths all over the world, displayed in a choropleth map. \" +\r\n    \"The map is colored for countries by different depth of one color, \" +\r\n    \"related to different degree of the total number of deaths in countries\",\"/mapdeaths\"],\r\n\r\n    ['Global Situation with Confirmed Cases and Deaths (weekly)',\r\n        \"A basic column chart for both total confirmed cases and deaths all over the world.\" +\r\n        \"The data is collected weekly. The column chart can be also changed into a line chart.\",\"/globalweekly\"],\r\n\r\n    ['Global Situation with Confirmed Cases (daily)',\r\n        \"A basic column chart for total confirmed cases and the average number of cases in 7 days all over the world.\" +\r\n        \"The data is collected daily. The column chart can be also changed into a line chart.\" +\r\n        \"It can also be chosen to zoom on a specific area and recover.\",\"/globaldaily\"],\r\n\r\n    ['Global Situation with Deaths (daily)',\r\n        \"A basic column chart for total deaths and the average number of deaths in 7 days all over the world.\" +\r\n        \"The data is collected daily. The column chart can be also changed into a line chart.\" +\r\n        \"It can also be chosen to zoom on a specific area and recover.\",\"/globaldailydeaths\"],\r\n\r\n    ['Stuck Column Chart of Continents (Confirmed Cases)',\r\n        \"A stuck column chart for total confirmed cases in 5 different continents: Asia, Europe, Americas,\" +\r\n        \"Africa and Oceania. The data is collected weekly. \",\"/stuckcolumnchart\"],\r\n\r\n    ['Stuck Column Chart of Continents (Deaths)',\r\n        \"A stuck column chart for total deaths in 5 different continents: Asia, Europe, Americas,\" +\r\n        \"Africa and Oceania. The data is collected weekly. \",\"/stuckcolumnchartdeaths\"],\r\n\r\n    ['Line Chart of Continents (Confirmed Cases)',\r\n        \"A basic line chart for showing total confirmed cases in 5 different continents: Asia, Europe, \" +\r\n        \"Americas, Africa, Oceania. The data is collected weekly. The line chart can be also changed into a \" +\r\n        \"column chart.\",\"/linechartscontinent\"],\r\n\r\n    ['Line Chart of Continents (Deaths)',\r\n        \"A basic line chart for showing total deaths in 5 different continents: Asia, Europe, \" +\r\n        \"Americas, Africa, Oceania. The data is collected weekly. The line chart can be also changed into a \" +\r\n        \"column chart.\",\"/linechartscontinentdeaths\"],\r\n\r\n    ['Data on 14-day notification rate of new cases in per 100,000 people by Continents',\r\n        \"A heatmap for showing the 14-day notification rate of new confirmed cases in every 100,000 people in \" +\r\n        \"5 different continents: Asia, Europe, Americas, Africa, Oceania. The data is collected weekly.\",\r\n        \"/heatmap\"],\r\n\r\n    ['Data on 14-day notification rate of new deaths in per 100,000 people by Continents',\r\n        \"A heatmap for showing the 14-day notification rate of new deaths in every 100,000 people in \" +\r\n        \"5 different continents: Asia, Europe, Americas, Africa, Oceania. The data is collected weekly.\",\r\n        \"/heatmapdeaths\"],\r\n\r\n    ['Stuck Column Chart of Main Countries (Confirmed Cases)',\r\n        \"A stuck column chart for total confirmed cases in 7 main countries: United States Of America, \" +\r\n        \"India, Brazil, Russia, France, United Kingdom and China. The data is collected weekly.\",\r\n        \"/stuckcolumnchartcountries\"],\r\n\r\n    ['Stuck Column Chart of Main Countries (Deaths)',\r\n        \"A stuck column chart for total deaths in 7 main countries: United States Of America, \" +\r\n        \"India, Brazil, Russia, France, United Kingdom and China. The data is collected weekly.\",\r\n        \"/stuckcolumnchartcountriesdeaths\"],\r\n\r\n    ['Line Chart of Main Countries (Confirmed Cases)',\r\n        \"A basic line chart for showing total confirmed cases in 7 main countries: United States Of America, India, \" +\r\n        \"Brazil, Russia, France, United Kingdom and China. The data is collected weekly. \" +\r\n        \"The line chart can be also changed into a column chart.\",\"/linechartscountries\"],\r\n\r\n    ['Line Chart of Main Countries (Deaths)',\r\n        \"A basic line chart for showing total deaths in 7 main countries: United States Of America, India, \" +\r\n        \"Brazil, Russia, France, United Kingdom and China. The data is collected weekly. \" +\r\n        \"The line chart can be also changed into a column chart.\",\"/linechartscountriesdeaths\"],\r\n\r\n    ['Data on 14-day notification rate of new cases in per 100,000 people by Main Countries',\r\n        \"A heatmap for showing the 14-day notification rate of new confirmed cases in every 100,000 people in \" +\r\n        \"7 main countries: United States Of America, India, Brazil, Russia, France, United Kingdom and China. \" +\r\n        \"The data is collected weekly.\", \"/heatmapcountries\"],\r\n\r\n    ['Data on 14-day notification rate of new deaths in per 100,000 people by Main Countries',\r\n        \"A heatmap for showing the 14-day notification rate of new deaths in every 100,000 people in \" +\r\n        \"7 main countries: United States Of America, India, Brazil, Russia, France, United Kingdom and China. \" +\r\n        \"The data is collected weekly.\", \"/heatmapcountriesdeaths\"],\r\n\r\n\r\n\r\n\r\n\r\n];\r\nclass Dashboard extends Component{\r\n    render(): React.ReactNode {\r\n        return(\r\n            <Typography>\r\n                <Title level={3}>Dashboard</Title>\r\n                <div style={{marginLeft:\"50px\",display:\"flex\",justifyContent:\"space-between\",\r\n                    alignItems: \"center\", alignContent: \"center\", padding:\"16px 24px\",\r\n                    width: \"1000px\", height: \"50px\"}}>\r\n                    <div style={{width:\"200px\",fontSize:\"20px\",fontWeight:\"500\"}}>Title</div>\r\n                    <div style={{width:\"500px\",fontSize:\"20px\",fontWeight:\"500\"}}>Description</div>\r\n                    <div style={{fontSize:\"20px\",fontWeight:\"500\"}}>Link</div>\r\n                </div>\r\n            <List\r\n                title=\"Dashboard\"\r\n                size=\"large\"\r\n                bordered\r\n                itemLayout=\"horizontal\"\r\n                dataSource={data}\r\n                style={{marginLeft:\"30px\"}}\r\n                renderItem={item => <List.Item style={{width: \"1000px\", height: \"auto\"}}>\r\n                    <div style={{width:\"200px\"}}>{item[0]}</div>\r\n                    <div style={{width:\"500px\"}}>{item[1]}</div>\r\n                    <div><Link to={item[2]}><LinkOutlined /></Link></div>\r\n                </List.Item>\r\n                }>\r\n                <Route exact path=\"/map\" component={Map} />\r\n                <Route exact path=\"/mapdeaths\" component={MapDeaths} />\r\n                <Route exact path=\"/linechartscontinent\" component={LineChartContinent} />\r\n                <Route exact path=\"/linechartscontinentdeaths\" component={LineChartContinentDeaths} />\r\n                <Route exact path=\"/linechartscontries\" component={LineChartCountries} />\r\n                <Route exact path=\"/linechartscontriesdeaths\" component={LineChartCountriesDeaths} />\r\n                <Route exact path=\"/Brazil\" component={Brazil} />\r\n                <Route exact path=\"/China\" component={China} />\r\n                <Route exact path=\"/France\" component={France} />\r\n                <Route exact path=\"/India\" component={India} />\r\n                <Route exact path=\"/Russia\" component={Russia} />\r\n                <Route exact path=\"/UnitedKingdom\" component={UnitedKingdom} />\r\n                <Route exact path=\"/UnitedStatesOfAmerica\" component={UnitedStatesOfAmerica} />\r\n\r\n                <Route exact path=\"/globalweekly\" component={GlobalWeekly} />\r\n                <Route exact path=\"/globaldaily\" component={GlobalDaily} />\r\n                <Route exact path=\"/globaldailydeaths\" component={GlobalDailyDeaths} />\r\n                <Route exact path=\"/stuckcolumnchart\" component={StuckColumnChart} />\r\n                <Route exact path=\"/stuckcolumnchartdeaths\" component={StuckColumnChartDeaths} />\r\n                <Route exact path=\"/stuckcolumnchartcountries\" component={StuckColumnChartCountries} />\r\n                <Route exact path=\"/stuckcolumnchartcountriesdeaths\" component={StuckColumnChartCountriesDeaths} />\r\n                {/*<Route exact path=\"/pielinechart\" component={PieLineChart} />*/}\r\n                <Route exact path=\"/heatmap\" component={Heatmap} />\r\n                <Route exact path=\"/heatmapdeaths\" component={HeatmapDeaths} />\r\n                <Route exact path=\"/heatmapcountries\" component={HeatmapCountries} />\r\n                <Route exact path=\"/heatmapcountriesdeaths\" component={HeatmapCountriesDeaths} />\r\n            </List>\r\n            </Typography>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}