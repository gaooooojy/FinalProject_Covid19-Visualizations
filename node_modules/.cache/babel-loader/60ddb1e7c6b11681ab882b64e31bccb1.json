{"ast":null,"code":"import { __extends } from \"tslib\";\nimport Displayable, { DEFAULT_COMMON_STYLE, DEFAULT_COMMON_ANIMATION_PROPS } from './Displayable';\nimport PathProxy from '../core/PathProxy';\nimport * as pathContain from '../contain/path';\nimport { defaults, keys, extend, clone, isString, createObject } from '../core/util';\nimport { lum } from '../tool/color';\nimport { DARK_LABEL_COLOR, LIGHT_LABEL_COLOR, DARK_MODE_THRESHOLD, LIGHTER_LABEL_COLOR } from '../config';\nimport { REDARAW_BIT, SHAPE_CHANGED_BIT, STYLE_CHANGED_BIT } from './constants';\nexport var DEFAULT_PATH_STYLE = defaults({\n  fill: '#000',\n  stroke: null,\n  strokePercent: 1,\n  fillOpacity: 1,\n  strokeOpacity: 1,\n  lineDashOffset: 0,\n  lineWidth: 1,\n  lineCap: 'butt',\n  miterLimit: 10,\n  strokeNoScale: false,\n  strokeFirst: false\n}, DEFAULT_COMMON_STYLE);\nexport var DEFAULT_PATH_ANIMATION_PROPS = {\n  style: defaults({\n    fill: true,\n    stroke: true,\n    strokePercent: true,\n    fillOpacity: true,\n    strokeOpacity: true,\n    lineDashOffset: true,\n    lineWidth: true,\n    miterLimit: true\n  }, DEFAULT_COMMON_ANIMATION_PROPS.style)\n};\nvar pathCopyParams = ['x', 'y', 'rotation', 'scaleX', 'scaleY', 'originX', 'originY', 'invisible', 'culling', 'z', 'z2', 'zlevel', 'parent'];\n\nvar Path = function (_super) {\n  __extends(Path, _super);\n\n  function Path(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  Path.prototype.update = function () {\n    var _this = this;\n\n    _super.prototype.update.call(this);\n\n    var style = this.style;\n\n    if (style.decal) {\n      var decalEl = this._decalEl = this._decalEl || new Path();\n\n      if (decalEl.buildPath === Path.prototype.buildPath) {\n        decalEl.buildPath = function (ctx) {\n          _this.buildPath(ctx, _this.shape);\n        };\n      }\n\n      decalEl.silent = true;\n      var decalElStyle = decalEl.style;\n\n      for (var key in style) {\n        if (decalElStyle[key] !== style[key]) {\n          decalElStyle[key] = style[key];\n        }\n      }\n\n      decalElStyle.fill = style.fill ? style.decal : null;\n      decalElStyle.decal = null;\n      decalElStyle.shadowColor = null;\n      style.strokeFirst && (decalElStyle.stroke = null);\n\n      for (var i = 0; i < pathCopyParams.length; ++i) {\n        decalEl[pathCopyParams[i]] = this[pathCopyParams[i]];\n      }\n\n      decalEl.__dirty |= REDARAW_BIT;\n    } else if (this._decalEl) {\n      this._decalEl = null;\n    }\n  };\n\n  Path.prototype.getDecalElement = function () {\n    return this._decalEl;\n  };\n\n  Path.prototype._init = function (props) {\n    var keysArr = keys(props);\n    this.shape = this.getDefaultShape();\n    var defaultStyle = this.getDefaultStyle();\n\n    if (defaultStyle) {\n      this.useStyle(defaultStyle);\n    }\n\n    for (var i = 0; i < keysArr.length; i++) {\n      var key = keysArr[i];\n      var value = props[key];\n\n      if (key === 'style') {\n        if (!this.style) {\n          this.useStyle(value);\n        } else {\n          extend(this.style, value);\n        }\n      } else if (key === 'shape') {\n        extend(this.shape, value);\n      } else {\n        _super.prototype.attrKV.call(this, key, value);\n      }\n    }\n\n    if (!this.style) {\n      this.useStyle({});\n    }\n  };\n\n  Path.prototype.getDefaultStyle = function () {\n    return null;\n  };\n\n  Path.prototype.getDefaultShape = function () {\n    return {};\n  };\n\n  Path.prototype.canBeInsideText = function () {\n    return this.hasFill();\n  };\n\n  Path.prototype.getInsideTextFill = function () {\n    var pathFill = this.style.fill;\n\n    if (pathFill !== 'none') {\n      if (isString(pathFill)) {\n        var fillLum = lum(pathFill, 0);\n\n        if (fillLum > 0.5) {\n          return DARK_LABEL_COLOR;\n        } else if (fillLum > 0.2) {\n          return LIGHTER_LABEL_COLOR;\n        }\n\n        return LIGHT_LABEL_COLOR;\n      } else if (pathFill) {\n        return LIGHT_LABEL_COLOR;\n      }\n    }\n\n    return DARK_LABEL_COLOR;\n  };\n\n  Path.prototype.getInsideTextStroke = function (textFill) {\n    var pathFill = this.style.fill;\n\n    if (isString(pathFill)) {\n      var zr = this.__zr;\n      var isDarkMode = !!(zr && zr.isDarkMode());\n      var isDarkLabel = lum(textFill, 0) < DARK_MODE_THRESHOLD;\n\n      if (isDarkMode === isDarkLabel) {\n        return pathFill;\n      }\n    }\n  };\n\n  Path.prototype.buildPath = function (ctx, shapeCfg, inBundle) {};\n\n  Path.prototype.pathUpdated = function () {\n    this.__dirty &= ~SHAPE_CHANGED_BIT;\n  };\n\n  Path.prototype.createPathProxy = function () {\n    this.path = new PathProxy(false);\n  };\n\n  Path.prototype.hasStroke = function () {\n    var style = this.style;\n    var stroke = style.stroke;\n    return !(stroke == null || stroke === 'none' || !(style.lineWidth > 0));\n  };\n\n  Path.prototype.hasFill = function () {\n    var style = this.style;\n    var fill = style.fill;\n    return fill != null && fill !== 'none';\n  };\n\n  Path.prototype.getBoundingRect = function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var firstInvoke = false;\n\n      if (!this.path) {\n        firstInvoke = true;\n        this.createPathProxy();\n      }\n\n      var path = this.path;\n\n      if (firstInvoke || this.__dirty & SHAPE_CHANGED_BIT) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n        this.pathUpdated();\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (this.hasStroke() && this.path && this.path.len() > 0) {\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect);\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n        var w = style.lineWidth;\n\n        if (!this.hasFill()) {\n          var strokeContainThreshold = this.strokeContainThreshold;\n          w = Math.max(w, strokeContainThreshold == null ? 4 : strokeContainThreshold);\n        }\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      }\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  };\n\n  Path.prototype.contain = function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathProxy = this.path;\n\n      if (this.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n        if (lineScale > 1e-10) {\n          if (!this.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathProxy, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (this.hasFill()) {\n        return pathContain.contain(pathProxy, x, y);\n      }\n    }\n\n    return false;\n  };\n\n  Path.prototype.dirtyShape = function () {\n    this.__dirty |= SHAPE_CHANGED_BIT;\n\n    if (this._rect) {\n      this._rect = null;\n    }\n\n    if (this._decalEl) {\n      this._decalEl.dirtyShape();\n    }\n\n    this.markRedraw();\n  };\n\n  Path.prototype.dirty = function () {\n    this.dirtyStyle();\n    this.dirtyShape();\n  };\n\n  Path.prototype.animateShape = function (loop) {\n    return this.animate('shape', loop);\n  };\n\n  Path.prototype.updateDuringAnimation = function (targetKey) {\n    if (targetKey === 'style') {\n      this.dirtyStyle();\n    } else if (targetKey === 'shape') {\n      this.dirtyShape();\n    } else {\n      this.markRedraw();\n    }\n  };\n\n  Path.prototype.attrKV = function (key, value) {\n    if (key === 'shape') {\n      this.setShape(value);\n    } else {\n      _super.prototype.attrKV.call(this, key, value);\n    }\n  };\n\n  Path.prototype.setShape = function (keyOrObj, value) {\n    var shape = this.shape;\n\n    if (!shape) {\n      shape = this.shape = {};\n    }\n\n    if (typeof keyOrObj === 'string') {\n      shape[keyOrObj] = value;\n    } else {\n      extend(shape, keyOrObj);\n    }\n\n    this.dirtyShape();\n    return this;\n  };\n\n  Path.prototype.shapeChanged = function () {\n    return !!(this.__dirty & SHAPE_CHANGED_BIT);\n  };\n\n  Path.prototype.createStyle = function (obj) {\n    return createObject(DEFAULT_PATH_STYLE, obj);\n  };\n\n  Path.prototype._innerSaveToNormal = function (toState) {\n    _super.prototype._innerSaveToNormal.call(this, toState);\n\n    var normalState = this._normalState;\n\n    if (toState.shape && !normalState.shape) {\n      normalState.shape = extend({}, this.shape);\n    }\n  };\n\n  Path.prototype._applyStateObj = function (stateName, state, normalState, keepCurrentStates, transition, animationCfg) {\n    _super.prototype._applyStateObj.call(this, stateName, state, normalState, keepCurrentStates, transition, animationCfg);\n\n    var needsRestoreToNormal = !(state && keepCurrentStates);\n    var targetShape;\n\n    if (state && state.shape) {\n      if (transition) {\n        if (keepCurrentStates) {\n          targetShape = state.shape;\n        } else {\n          targetShape = extend({}, normalState.shape);\n          extend(targetShape, state.shape);\n        }\n      } else {\n        targetShape = extend({}, keepCurrentStates ? this.shape : normalState.shape);\n        extend(targetShape, state.shape);\n      }\n    } else if (needsRestoreToNormal) {\n      targetShape = normalState.shape;\n    }\n\n    if (targetShape) {\n      if (transition) {\n        this.shape = extend({}, this.shape);\n        var targetShapePrimaryProps = {};\n        var shapeKeys = keys(targetShape);\n\n        for (var i = 0; i < shapeKeys.length; i++) {\n          var key = shapeKeys[i];\n\n          if (typeof targetShape[key] === 'object') {\n            this.shape[key] = targetShape[key];\n          } else {\n            targetShapePrimaryProps[key] = targetShape[key];\n          }\n        }\n\n        this._transitionState(stateName, {\n          shape: targetShapePrimaryProps\n        }, animationCfg);\n      } else {\n        this.shape = targetShape;\n        this.dirtyShape();\n      }\n    }\n  };\n\n  Path.prototype._mergeStates = function (states) {\n    var mergedState = _super.prototype._mergeStates.call(this, states);\n\n    var mergedShape;\n\n    for (var i = 0; i < states.length; i++) {\n      var state = states[i];\n\n      if (state.shape) {\n        mergedShape = mergedShape || {};\n\n        this._mergeStyle(mergedShape, state.shape);\n      }\n    }\n\n    if (mergedShape) {\n      mergedState.shape = mergedShape;\n    }\n\n    return mergedState;\n  };\n\n  Path.prototype.getAnimationStyleProps = function () {\n    return DEFAULT_PATH_ANIMATION_PROPS;\n  };\n\n  Path.prototype.isZeroArea = function () {\n    return false;\n  };\n\n  Path.extend = function (defaultProps) {\n    var Sub = function (_super) {\n      __extends(Sub, _super);\n\n      function Sub(opts) {\n        var _this = _super.call(this, opts) || this;\n\n        defaultProps.init && defaultProps.init.call(_this, opts);\n        return _this;\n      }\n\n      Sub.prototype.getDefaultStyle = function () {\n        return clone(defaultProps.style);\n      };\n\n      Sub.prototype.getDefaultShape = function () {\n        return clone(defaultProps.shape);\n      };\n\n      return Sub;\n    }(Path);\n\n    for (var key in defaultProps) {\n      if (typeof defaultProps[key] === 'function') {\n        Sub.prototype[key] = defaultProps[key];\n      }\n    }\n\n    return Sub;\n  };\n\n  Path.initDefaultProps = function () {\n    var pathProto = Path.prototype;\n    pathProto.type = 'path';\n    pathProto.strokeContainThreshold = 5;\n    pathProto.segmentIgnoreThreshold = 0;\n    pathProto.subPixelOptimize = false;\n    pathProto.autoBatch = false;\n    pathProto.__dirty = REDARAW_BIT | STYLE_CHANGED_BIT | SHAPE_CHANGED_BIT;\n  }();\n\n  return Path;\n}(Displayable);\n\nexport default Path;","map":{"version":3,"sources":["C:/Users/gaooooojy/Desktop/project/node_modules/zrender/lib/graphic/Path.js"],"names":["__extends","Displayable","DEFAULT_COMMON_STYLE","DEFAULT_COMMON_ANIMATION_PROPS","PathProxy","pathContain","defaults","keys","extend","clone","isString","createObject","lum","DARK_LABEL_COLOR","LIGHT_LABEL_COLOR","DARK_MODE_THRESHOLD","LIGHTER_LABEL_COLOR","REDARAW_BIT","SHAPE_CHANGED_BIT","STYLE_CHANGED_BIT","DEFAULT_PATH_STYLE","fill","stroke","strokePercent","fillOpacity","strokeOpacity","lineDashOffset","lineWidth","lineCap","miterLimit","strokeNoScale","strokeFirst","DEFAULT_PATH_ANIMATION_PROPS","style","pathCopyParams","Path","_super","opts","call","prototype","update","_this","decal","decalEl","_decalEl","buildPath","ctx","shape","silent","decalElStyle","key","shadowColor","i","length","__dirty","getDecalElement","_init","props","keysArr","getDefaultShape","defaultStyle","getDefaultStyle","useStyle","value","attrKV","canBeInsideText","hasFill","getInsideTextFill","pathFill","fillLum","getInsideTextStroke","textFill","zr","__zr","isDarkMode","isDarkLabel","shapeCfg","inBundle","pathUpdated","createPathProxy","path","hasStroke","getBoundingRect","rect","_rect","needsUpdateRect","firstInvoke","beginPath","len","rectWithStroke","_rectWithStroke","copy","lineScale","getLineScale","w","strokeContainThreshold","Math","max","width","height","x","y","contain","localPos","transformCoordToLocal","pathProxy","containStroke","dirtyShape","markRedraw","dirty","dirtyStyle","animateShape","loop","animate","updateDuringAnimation","targetKey","setShape","keyOrObj","shapeChanged","createStyle","obj","_innerSaveToNormal","toState","normalState","_normalState","_applyStateObj","stateName","state","keepCurrentStates","transition","animationCfg","needsRestoreToNormal","targetShape","targetShapePrimaryProps","shapeKeys","_transitionState","_mergeStates","states","mergedState","mergedShape","_mergeStyle","getAnimationStyleProps","isZeroArea","defaultProps","Sub","init","initDefaultProps","pathProto","type","segmentIgnoreThreshold","subPixelOptimize","autoBatch"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,IAAsBC,oBAAtB,EAA4CC,8BAA5C,QAAkF,eAAlF;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,iBAA7B;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,KAAjC,EAAwCC,QAAxC,EAAkDC,YAAlD,QAAsE,cAAtE;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,EAA8CC,mBAA9C,EAAmEC,mBAAnE,QAA8F,WAA9F;AACA,SAASC,WAAT,EAAsBC,iBAAtB,EAAyCC,iBAAzC,QAAkE,aAAlE;AACA,OAAO,IAAIC,kBAAkB,GAAGd,QAAQ,CAAC;AACrCe,EAAAA,IAAI,EAAE,MAD+B;AAErCC,EAAAA,MAAM,EAAE,IAF6B;AAGrCC,EAAAA,aAAa,EAAE,CAHsB;AAIrCC,EAAAA,WAAW,EAAE,CAJwB;AAKrCC,EAAAA,aAAa,EAAE,CALsB;AAMrCC,EAAAA,cAAc,EAAE,CANqB;AAOrCC,EAAAA,SAAS,EAAE,CAP0B;AAQrCC,EAAAA,OAAO,EAAE,MAR4B;AASrCC,EAAAA,UAAU,EAAE,EATyB;AAUrCC,EAAAA,aAAa,EAAE,KAVsB;AAWrCC,EAAAA,WAAW,EAAE;AAXwB,CAAD,EAYrC7B,oBAZqC,CAAjC;AAaP,OAAO,IAAI8B,4BAA4B,GAAG;AACtCC,EAAAA,KAAK,EAAE3B,QAAQ,CAAC;AACZe,IAAAA,IAAI,EAAE,IADM;AAEZC,IAAAA,MAAM,EAAE,IAFI;AAGZC,IAAAA,aAAa,EAAE,IAHH;AAIZC,IAAAA,WAAW,EAAE,IAJD;AAKZC,IAAAA,aAAa,EAAE,IALH;AAMZC,IAAAA,cAAc,EAAE,IANJ;AAOZC,IAAAA,SAAS,EAAE,IAPC;AAQZE,IAAAA,UAAU,EAAE;AARA,GAAD,EASZ1B,8BAA8B,CAAC8B,KATnB;AADuB,CAAnC;AAYP,IAAIC,cAAc,GAAG,CACjB,GADiB,EACZ,GADY,EACP,UADO,EACK,QADL,EACe,QADf,EACyB,SADzB,EACoC,SADpC,EAC+C,WAD/C,EAEjB,SAFiB,EAEN,GAFM,EAED,IAFC,EAEK,QAFL,EAEe,QAFf,CAArB;;AAIA,IAAIC,IAAI,GAAI,UAAUC,MAAV,EAAkB;AAC1BpC,EAAAA,SAAS,CAACmC,IAAD,EAAOC,MAAP,CAAT;;AACA,WAASD,IAAT,CAAcE,IAAd,EAAoB;AAChB,WAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,IAAlB,KAA2B,IAAlC;AACH;;AACDF,EAAAA,IAAI,CAACI,SAAL,CAAeC,MAAf,GAAwB,YAAY;AAChC,QAAIC,KAAK,GAAG,IAAZ;;AACAL,IAAAA,MAAM,CAACG,SAAP,CAAiBC,MAAjB,CAAwBF,IAAxB,CAA6B,IAA7B;;AACA,QAAIL,KAAK,GAAG,KAAKA,KAAjB;;AACA,QAAIA,KAAK,CAACS,KAAV,EAAiB;AACb,UAAIC,OAAO,GAAG,KAAKC,QAAL,GAAgB,KAAKA,QAAL,IAAiB,IAAIT,IAAJ,EAA/C;;AACA,UAAIQ,OAAO,CAACE,SAAR,KAAsBV,IAAI,CAACI,SAAL,CAAeM,SAAzC,EAAoD;AAChDF,QAAAA,OAAO,CAACE,SAAR,GAAoB,UAAUC,GAAV,EAAe;AAC/BL,UAAAA,KAAK,CAACI,SAAN,CAAgBC,GAAhB,EAAqBL,KAAK,CAACM,KAA3B;AACH,SAFD;AAGH;;AACDJ,MAAAA,OAAO,CAACK,MAAR,GAAiB,IAAjB;AACA,UAAIC,YAAY,GAAGN,OAAO,CAACV,KAA3B;;AACA,WAAK,IAAIiB,GAAT,IAAgBjB,KAAhB,EAAuB;AACnB,YAAIgB,YAAY,CAACC,GAAD,CAAZ,KAAsBjB,KAAK,CAACiB,GAAD,CAA/B,EAAsC;AAClCD,UAAAA,YAAY,CAACC,GAAD,CAAZ,GAAoBjB,KAAK,CAACiB,GAAD,CAAzB;AACH;AACJ;;AACDD,MAAAA,YAAY,CAAC5B,IAAb,GAAoBY,KAAK,CAACZ,IAAN,GAAaY,KAAK,CAACS,KAAnB,GAA2B,IAA/C;AACAO,MAAAA,YAAY,CAACP,KAAb,GAAqB,IAArB;AACAO,MAAAA,YAAY,CAACE,WAAb,GAA2B,IAA3B;AACAlB,MAAAA,KAAK,CAACF,WAAN,KAAsBkB,YAAY,CAAC3B,MAAb,GAAsB,IAA5C;;AACA,WAAK,IAAI8B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,cAAc,CAACmB,MAAnC,EAA2C,EAAED,CAA7C,EAAgD;AAC5CT,QAAAA,OAAO,CAACT,cAAc,CAACkB,CAAD,CAAf,CAAP,GAA6B,KAAKlB,cAAc,CAACkB,CAAD,CAAnB,CAA7B;AACH;;AACDT,MAAAA,OAAO,CAACW,OAAR,IAAmBrC,WAAnB;AACH,KAtBD,MAuBK,IAAI,KAAK2B,QAAT,EAAmB;AACpB,WAAKA,QAAL,GAAgB,IAAhB;AACH;AACJ,GA9BD;;AA+BAT,EAAAA,IAAI,CAACI,SAAL,CAAegB,eAAf,GAAiC,YAAY;AACzC,WAAO,KAAKX,QAAZ;AACH,GAFD;;AAGAT,EAAAA,IAAI,CAACI,SAAL,CAAeiB,KAAf,GAAuB,UAAUC,KAAV,EAAiB;AACpC,QAAIC,OAAO,GAAGnD,IAAI,CAACkD,KAAD,CAAlB;AACA,SAAKV,KAAL,GAAa,KAAKY,eAAL,EAAb;AACA,QAAIC,YAAY,GAAG,KAAKC,eAAL,EAAnB;;AACA,QAAID,YAAJ,EAAkB;AACd,WAAKE,QAAL,CAAcF,YAAd;AACH;;AACD,SAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,OAAO,CAACL,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,UAAIF,GAAG,GAAGQ,OAAO,CAACN,CAAD,CAAjB;AACA,UAAIW,KAAK,GAAGN,KAAK,CAACP,GAAD,CAAjB;;AACA,UAAIA,GAAG,KAAK,OAAZ,EAAqB;AACjB,YAAI,CAAC,KAAKjB,KAAV,EAAiB;AACb,eAAK6B,QAAL,CAAcC,KAAd;AACH,SAFD,MAGK;AACDvD,UAAAA,MAAM,CAAC,KAAKyB,KAAN,EAAa8B,KAAb,CAAN;AACH;AACJ,OAPD,MAQK,IAAIb,GAAG,KAAK,OAAZ,EAAqB;AACtB1C,QAAAA,MAAM,CAAC,KAAKuC,KAAN,EAAagB,KAAb,CAAN;AACH,OAFI,MAGA;AACD3B,QAAAA,MAAM,CAACG,SAAP,CAAiByB,MAAjB,CAAwB1B,IAAxB,CAA6B,IAA7B,EAAmCY,GAAnC,EAAwCa,KAAxC;AACH;AACJ;;AACD,QAAI,CAAC,KAAK9B,KAAV,EAAiB;AACb,WAAK6B,QAAL,CAAc,EAAd;AACH;AACJ,GA5BD;;AA6BA3B,EAAAA,IAAI,CAACI,SAAL,CAAesB,eAAf,GAAiC,YAAY;AACzC,WAAO,IAAP;AACH,GAFD;;AAGA1B,EAAAA,IAAI,CAACI,SAAL,CAAeoB,eAAf,GAAiC,YAAY;AACzC,WAAO,EAAP;AACH,GAFD;;AAGAxB,EAAAA,IAAI,CAACI,SAAL,CAAe0B,eAAf,GAAiC,YAAY;AACzC,WAAO,KAAKC,OAAL,EAAP;AACH,GAFD;;AAGA/B,EAAAA,IAAI,CAACI,SAAL,CAAe4B,iBAAf,GAAmC,YAAY;AAC3C,QAAIC,QAAQ,GAAG,KAAKnC,KAAL,CAAWZ,IAA1B;;AACA,QAAI+C,QAAQ,KAAK,MAAjB,EAAyB;AACrB,UAAI1D,QAAQ,CAAC0D,QAAD,CAAZ,EAAwB;AACpB,YAAIC,OAAO,GAAGzD,GAAG,CAACwD,QAAD,EAAW,CAAX,CAAjB;;AACA,YAAIC,OAAO,GAAG,GAAd,EAAmB;AACf,iBAAOxD,gBAAP;AACH,SAFD,MAGK,IAAIwD,OAAO,GAAG,GAAd,EAAmB;AACpB,iBAAOrD,mBAAP;AACH;;AACD,eAAOF,iBAAP;AACH,OATD,MAUK,IAAIsD,QAAJ,EAAc;AACf,eAAOtD,iBAAP;AACH;AACJ;;AACD,WAAOD,gBAAP;AACH,GAlBD;;AAmBAsB,EAAAA,IAAI,CAACI,SAAL,CAAe+B,mBAAf,GAAqC,UAAUC,QAAV,EAAoB;AACrD,QAAIH,QAAQ,GAAG,KAAKnC,KAAL,CAAWZ,IAA1B;;AACA,QAAIX,QAAQ,CAAC0D,QAAD,CAAZ,EAAwB;AACpB,UAAII,EAAE,GAAG,KAAKC,IAAd;AACA,UAAIC,UAAU,GAAG,CAAC,EAAEF,EAAE,IAAIA,EAAE,CAACE,UAAH,EAAR,CAAlB;AACA,UAAIC,WAAW,GAAG/D,GAAG,CAAC2D,QAAD,EAAW,CAAX,CAAH,GAAmBxD,mBAArC;;AACA,UAAI2D,UAAU,KAAKC,WAAnB,EAAgC;AAC5B,eAAOP,QAAP;AACH;AACJ;AACJ,GAVD;;AAWAjC,EAAAA,IAAI,CAACI,SAAL,CAAeM,SAAf,GAA2B,UAAUC,GAAV,EAAe8B,QAAf,EAAyBC,QAAzB,EAAmC,CAAG,CAAjE;;AACA1C,EAAAA,IAAI,CAACI,SAAL,CAAeuC,WAAf,GAA6B,YAAY;AACrC,SAAKxB,OAAL,IAAgB,CAACpC,iBAAjB;AACH,GAFD;;AAGAiB,EAAAA,IAAI,CAACI,SAAL,CAAewC,eAAf,GAAiC,YAAY;AACzC,SAAKC,IAAL,GAAY,IAAI5E,SAAJ,CAAc,KAAd,CAAZ;AACH,GAFD;;AAGA+B,EAAAA,IAAI,CAACI,SAAL,CAAe0C,SAAf,GAA2B,YAAY;AACnC,QAAIhD,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAIX,MAAM,GAAGW,KAAK,CAACX,MAAnB;AACA,WAAO,EAAEA,MAAM,IAAI,IAAV,IAAkBA,MAAM,KAAK,MAA7B,IAAuC,EAAEW,KAAK,CAACN,SAAN,GAAkB,CAApB,CAAzC,CAAP;AACH,GAJD;;AAKAQ,EAAAA,IAAI,CAACI,SAAL,CAAe2B,OAAf,GAAyB,YAAY;AACjC,QAAIjC,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAIZ,IAAI,GAAGY,KAAK,CAACZ,IAAjB;AACA,WAAOA,IAAI,IAAI,IAAR,IAAgBA,IAAI,KAAK,MAAhC;AACH,GAJD;;AAKAc,EAAAA,IAAI,CAACI,SAAL,CAAe2C,eAAf,GAAiC,YAAY;AACzC,QAAIC,IAAI,GAAG,KAAKC,KAAhB;AACA,QAAInD,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAIoD,eAAe,GAAG,CAACF,IAAvB;;AACA,QAAIE,eAAJ,EAAqB;AACjB,UAAIC,WAAW,GAAG,KAAlB;;AACA,UAAI,CAAC,KAAKN,IAAV,EAAgB;AACZM,QAAAA,WAAW,GAAG,IAAd;AACA,aAAKP,eAAL;AACH;;AACD,UAAIC,IAAI,GAAG,KAAKA,IAAhB;;AACA,UAAIM,WAAW,IAAK,KAAKhC,OAAL,GAAepC,iBAAnC,EAAuD;AACnD8D,QAAAA,IAAI,CAACO,SAAL;AACA,aAAK1C,SAAL,CAAemC,IAAf,EAAqB,KAAKjC,KAA1B,EAAiC,KAAjC;AACA,aAAK+B,WAAL;AACH;;AACDK,MAAAA,IAAI,GAAGH,IAAI,CAACE,eAAL,EAAP;AACH;;AACD,SAAKE,KAAL,GAAaD,IAAb;;AACA,QAAI,KAAKF,SAAL,MAAoB,KAAKD,IAAzB,IAAiC,KAAKA,IAAL,CAAUQ,GAAV,KAAkB,CAAvD,EAA0D;AACtD,UAAIC,cAAc,GAAG,KAAKC,eAAL,KAAyB,KAAKA,eAAL,GAAuBP,IAAI,CAAC1E,KAAL,EAAhD,CAArB;;AACA,UAAI,KAAK6C,OAAL,IAAgB+B,eAApB,EAAqC;AACjCI,QAAAA,cAAc,CAACE,IAAf,CAAoBR,IAApB;AACA,YAAIS,SAAS,GAAG3D,KAAK,CAACH,aAAN,GAAsB,KAAK+D,YAAL,EAAtB,GAA4C,CAA5D;AACA,YAAIC,CAAC,GAAG7D,KAAK,CAACN,SAAd;;AACA,YAAI,CAAC,KAAKuC,OAAL,EAAL,EAAqB;AACjB,cAAI6B,sBAAsB,GAAG,KAAKA,sBAAlC;AACAD,UAAAA,CAAC,GAAGE,IAAI,CAACC,GAAL,CAASH,CAAT,EAAYC,sBAAsB,IAAI,IAA1B,GAAiC,CAAjC,GAAqCA,sBAAjD,CAAJ;AACH;;AACD,YAAIH,SAAS,GAAG,KAAhB,EAAuB;AACnBH,UAAAA,cAAc,CAACS,KAAf,IAAwBJ,CAAC,GAAGF,SAA5B;AACAH,UAAAA,cAAc,CAACU,MAAf,IAAyBL,CAAC,GAAGF,SAA7B;AACAH,UAAAA,cAAc,CAACW,CAAf,IAAoBN,CAAC,GAAGF,SAAJ,GAAgB,CAApC;AACAH,UAAAA,cAAc,CAACY,CAAf,IAAoBP,CAAC,GAAGF,SAAJ,GAAgB,CAApC;AACH;AACJ;;AACD,aAAOH,cAAP;AACH;;AACD,WAAON,IAAP;AACH,GAvCD;;AAwCAhD,EAAAA,IAAI,CAACI,SAAL,CAAe+D,OAAf,GAAyB,UAAUF,CAAV,EAAaC,CAAb,EAAgB;AACrC,QAAIE,QAAQ,GAAG,KAAKC,qBAAL,CAA2BJ,CAA3B,EAA8BC,CAA9B,CAAf;AACA,QAAIlB,IAAI,GAAG,KAAKD,eAAL,EAAX;AACA,QAAIjD,KAAK,GAAG,KAAKA,KAAjB;AACAmE,IAAAA,CAAC,GAAGG,QAAQ,CAAC,CAAD,CAAZ;AACAF,IAAAA,CAAC,GAAGE,QAAQ,CAAC,CAAD,CAAZ;;AACA,QAAIpB,IAAI,CAACmB,OAAL,CAAaF,CAAb,EAAgBC,CAAhB,CAAJ,EAAwB;AACpB,UAAII,SAAS,GAAG,KAAKzB,IAArB;;AACA,UAAI,KAAKC,SAAL,EAAJ,EAAsB;AAClB,YAAItD,SAAS,GAAGM,KAAK,CAACN,SAAtB;AACA,YAAIiE,SAAS,GAAG3D,KAAK,CAACH,aAAN,GAAsB,KAAK+D,YAAL,EAAtB,GAA4C,CAA5D;;AACA,YAAID,SAAS,GAAG,KAAhB,EAAuB;AACnB,cAAI,CAAC,KAAK1B,OAAL,EAAL,EAAqB;AACjBvC,YAAAA,SAAS,GAAGqE,IAAI,CAACC,GAAL,CAAStE,SAAT,EAAoB,KAAKoE,sBAAzB,CAAZ;AACH;;AACD,cAAI1F,WAAW,CAACqG,aAAZ,CAA0BD,SAA1B,EAAqC9E,SAAS,GAAGiE,SAAjD,EAA4DQ,CAA5D,EAA+DC,CAA/D,CAAJ,EAAuE;AACnE,mBAAO,IAAP;AACH;AACJ;AACJ;;AACD,UAAI,KAAKnC,OAAL,EAAJ,EAAoB;AAChB,eAAO7D,WAAW,CAACiG,OAAZ,CAAoBG,SAApB,EAA+BL,CAA/B,EAAkCC,CAAlC,CAAP;AACH;AACJ;;AACD,WAAO,KAAP;AACH,GAzBD;;AA0BAlE,EAAAA,IAAI,CAACI,SAAL,CAAeoE,UAAf,GAA4B,YAAY;AACpC,SAAKrD,OAAL,IAAgBpC,iBAAhB;;AACA,QAAI,KAAKkE,KAAT,EAAgB;AACZ,WAAKA,KAAL,GAAa,IAAb;AACH;;AACD,QAAI,KAAKxC,QAAT,EAAmB;AACf,WAAKA,QAAL,CAAc+D,UAAd;AACH;;AACD,SAAKC,UAAL;AACH,GATD;;AAUAzE,EAAAA,IAAI,CAACI,SAAL,CAAesE,KAAf,GAAuB,YAAY;AAC/B,SAAKC,UAAL;AACA,SAAKH,UAAL;AACH,GAHD;;AAIAxE,EAAAA,IAAI,CAACI,SAAL,CAAewE,YAAf,GAA8B,UAAUC,IAAV,EAAgB;AAC1C,WAAO,KAAKC,OAAL,CAAa,OAAb,EAAsBD,IAAtB,CAAP;AACH,GAFD;;AAGA7E,EAAAA,IAAI,CAACI,SAAL,CAAe2E,qBAAf,GAAuC,UAAUC,SAAV,EAAqB;AACxD,QAAIA,SAAS,KAAK,OAAlB,EAA2B;AACvB,WAAKL,UAAL;AACH,KAFD,MAGK,IAAIK,SAAS,KAAK,OAAlB,EAA2B;AAC5B,WAAKR,UAAL;AACH,KAFI,MAGA;AACD,WAAKC,UAAL;AACH;AACJ,GAVD;;AAWAzE,EAAAA,IAAI,CAACI,SAAL,CAAeyB,MAAf,GAAwB,UAAUd,GAAV,EAAea,KAAf,EAAsB;AAC1C,QAAIb,GAAG,KAAK,OAAZ,EAAqB;AACjB,WAAKkE,QAAL,CAAcrD,KAAd;AACH,KAFD,MAGK;AACD3B,MAAAA,MAAM,CAACG,SAAP,CAAiByB,MAAjB,CAAwB1B,IAAxB,CAA6B,IAA7B,EAAmCY,GAAnC,EAAwCa,KAAxC;AACH;AACJ,GAPD;;AAQA5B,EAAAA,IAAI,CAACI,SAAL,CAAe6E,QAAf,GAA0B,UAAUC,QAAV,EAAoBtD,KAApB,EAA2B;AACjD,QAAIhB,KAAK,GAAG,KAAKA,KAAjB;;AACA,QAAI,CAACA,KAAL,EAAY;AACRA,MAAAA,KAAK,GAAG,KAAKA,KAAL,GAAa,EAArB;AACH;;AACD,QAAI,OAAOsE,QAAP,KAAoB,QAAxB,EAAkC;AAC9BtE,MAAAA,KAAK,CAACsE,QAAD,CAAL,GAAkBtD,KAAlB;AACH,KAFD,MAGK;AACDvD,MAAAA,MAAM,CAACuC,KAAD,EAAQsE,QAAR,CAAN;AACH;;AACD,SAAKV,UAAL;AACA,WAAO,IAAP;AACH,GAbD;;AAcAxE,EAAAA,IAAI,CAACI,SAAL,CAAe+E,YAAf,GAA8B,YAAY;AACtC,WAAO,CAAC,EAAE,KAAKhE,OAAL,GAAepC,iBAAjB,CAAR;AACH,GAFD;;AAGAiB,EAAAA,IAAI,CAACI,SAAL,CAAegF,WAAf,GAA6B,UAAUC,GAAV,EAAe;AACxC,WAAO7G,YAAY,CAACS,kBAAD,EAAqBoG,GAArB,CAAnB;AACH,GAFD;;AAGArF,EAAAA,IAAI,CAACI,SAAL,CAAekF,kBAAf,GAAoC,UAAUC,OAAV,EAAmB;AACnDtF,IAAAA,MAAM,CAACG,SAAP,CAAiBkF,kBAAjB,CAAoCnF,IAApC,CAAyC,IAAzC,EAA+CoF,OAA/C;;AACA,QAAIC,WAAW,GAAG,KAAKC,YAAvB;;AACA,QAAIF,OAAO,CAAC3E,KAAR,IAAiB,CAAC4E,WAAW,CAAC5E,KAAlC,EAAyC;AACrC4E,MAAAA,WAAW,CAAC5E,KAAZ,GAAoBvC,MAAM,CAAC,EAAD,EAAK,KAAKuC,KAAV,CAA1B;AACH;AACJ,GAND;;AAOAZ,EAAAA,IAAI,CAACI,SAAL,CAAesF,cAAf,GAAgC,UAAUC,SAAV,EAAqBC,KAArB,EAA4BJ,WAA5B,EAAyCK,iBAAzC,EAA4DC,UAA5D,EAAwEC,YAAxE,EAAsF;AAClH9F,IAAAA,MAAM,CAACG,SAAP,CAAiBsF,cAAjB,CAAgCvF,IAAhC,CAAqC,IAArC,EAA2CwF,SAA3C,EAAsDC,KAAtD,EAA6DJ,WAA7D,EAA0EK,iBAA1E,EAA6FC,UAA7F,EAAyGC,YAAzG;;AACA,QAAIC,oBAAoB,GAAG,EAAEJ,KAAK,IAAIC,iBAAX,CAA3B;AACA,QAAII,WAAJ;;AACA,QAAIL,KAAK,IAAIA,KAAK,CAAChF,KAAnB,EAA0B;AACtB,UAAIkF,UAAJ,EAAgB;AACZ,YAAID,iBAAJ,EAAuB;AACnBI,UAAAA,WAAW,GAAGL,KAAK,CAAChF,KAApB;AACH,SAFD,MAGK;AACDqF,UAAAA,WAAW,GAAG5H,MAAM,CAAC,EAAD,EAAKmH,WAAW,CAAC5E,KAAjB,CAApB;AACAvC,UAAAA,MAAM,CAAC4H,WAAD,EAAcL,KAAK,CAAChF,KAApB,CAAN;AACH;AACJ,OARD,MASK;AACDqF,QAAAA,WAAW,GAAG5H,MAAM,CAAC,EAAD,EAAKwH,iBAAiB,GAAG,KAAKjF,KAAR,GAAgB4E,WAAW,CAAC5E,KAAlD,CAApB;AACAvC,QAAAA,MAAM,CAAC4H,WAAD,EAAcL,KAAK,CAAChF,KAApB,CAAN;AACH;AACJ,KAdD,MAeK,IAAIoF,oBAAJ,EAA0B;AAC3BC,MAAAA,WAAW,GAAGT,WAAW,CAAC5E,KAA1B;AACH;;AACD,QAAIqF,WAAJ,EAAiB;AACb,UAAIH,UAAJ,EAAgB;AACZ,aAAKlF,KAAL,GAAavC,MAAM,CAAC,EAAD,EAAK,KAAKuC,KAAV,CAAnB;AACA,YAAIsF,uBAAuB,GAAG,EAA9B;AACA,YAAIC,SAAS,GAAG/H,IAAI,CAAC6H,WAAD,CAApB;;AACA,aAAK,IAAIhF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkF,SAAS,CAACjF,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,cAAIF,GAAG,GAAGoF,SAAS,CAAClF,CAAD,CAAnB;;AACA,cAAI,OAAOgF,WAAW,CAAClF,GAAD,CAAlB,KAA4B,QAAhC,EAA0C;AACtC,iBAAKH,KAAL,CAAWG,GAAX,IAAkBkF,WAAW,CAAClF,GAAD,CAA7B;AACH,WAFD,MAGK;AACDmF,YAAAA,uBAAuB,CAACnF,GAAD,CAAvB,GAA+BkF,WAAW,CAAClF,GAAD,CAA1C;AACH;AACJ;;AACD,aAAKqF,gBAAL,CAAsBT,SAAtB,EAAiC;AAC7B/E,UAAAA,KAAK,EAAEsF;AADsB,SAAjC,EAEGH,YAFH;AAGH,OAhBD,MAiBK;AACD,aAAKnF,KAAL,GAAaqF,WAAb;AACA,aAAKzB,UAAL;AACH;AACJ;AACJ,GA7CD;;AA8CAxE,EAAAA,IAAI,CAACI,SAAL,CAAeiG,YAAf,GAA8B,UAAUC,MAAV,EAAkB;AAC5C,QAAIC,WAAW,GAAGtG,MAAM,CAACG,SAAP,CAAiBiG,YAAjB,CAA8BlG,IAA9B,CAAmC,IAAnC,EAAyCmG,MAAzC,CAAlB;;AACA,QAAIE,WAAJ;;AACA,SAAK,IAAIvF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqF,MAAM,CAACpF,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpC,UAAI2E,KAAK,GAAGU,MAAM,CAACrF,CAAD,CAAlB;;AACA,UAAI2E,KAAK,CAAChF,KAAV,EAAiB;AACb4F,QAAAA,WAAW,GAAGA,WAAW,IAAI,EAA7B;;AACA,aAAKC,WAAL,CAAiBD,WAAjB,EAA8BZ,KAAK,CAAChF,KAApC;AACH;AACJ;;AACD,QAAI4F,WAAJ,EAAiB;AACbD,MAAAA,WAAW,CAAC3F,KAAZ,GAAoB4F,WAApB;AACH;;AACD,WAAOD,WAAP;AACH,GAdD;;AAeAvG,EAAAA,IAAI,CAACI,SAAL,CAAesG,sBAAf,GAAwC,YAAY;AAChD,WAAO7G,4BAAP;AACH,GAFD;;AAGAG,EAAAA,IAAI,CAACI,SAAL,CAAeuG,UAAf,GAA4B,YAAY;AACpC,WAAO,KAAP;AACH,GAFD;;AAGA3G,EAAAA,IAAI,CAAC3B,MAAL,GAAc,UAAUuI,YAAV,EAAwB;AAClC,QAAIC,GAAG,GAAI,UAAU5G,MAAV,EAAkB;AACzBpC,MAAAA,SAAS,CAACgJ,GAAD,EAAM5G,MAAN,CAAT;;AACA,eAAS4G,GAAT,CAAa3G,IAAb,EAAmB;AACf,YAAII,KAAK,GAAGL,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,IAAlB,KAA2B,IAAvC;;AACA0G,QAAAA,YAAY,CAACE,IAAb,IAAqBF,YAAY,CAACE,IAAb,CAAkB3G,IAAlB,CAAuBG,KAAvB,EAA8BJ,IAA9B,CAArB;AACA,eAAOI,KAAP;AACH;;AACDuG,MAAAA,GAAG,CAACzG,SAAJ,CAAcsB,eAAd,GAAgC,YAAY;AACxC,eAAOpD,KAAK,CAACsI,YAAY,CAAC9G,KAAd,CAAZ;AACH,OAFD;;AAGA+G,MAAAA,GAAG,CAACzG,SAAJ,CAAcoB,eAAd,GAAgC,YAAY;AACxC,eAAOlD,KAAK,CAACsI,YAAY,CAAChG,KAAd,CAAZ;AACH,OAFD;;AAGA,aAAOiG,GAAP;AACH,KAdU,CAcT7G,IAdS,CAAX;;AAeA,SAAK,IAAIe,GAAT,IAAgB6F,YAAhB,EAA8B;AAC1B,UAAI,OAAOA,YAAY,CAAC7F,GAAD,CAAnB,KAA6B,UAAjC,EAA6C;AACzC8F,QAAAA,GAAG,CAACzG,SAAJ,CAAcW,GAAd,IAAqB6F,YAAY,CAAC7F,GAAD,CAAjC;AACH;AACJ;;AACD,WAAO8F,GAAP;AACH,GAtBD;;AAuBA7G,EAAAA,IAAI,CAAC+G,gBAAL,GAAyB,YAAY;AACjC,QAAIC,SAAS,GAAGhH,IAAI,CAACI,SAArB;AACA4G,IAAAA,SAAS,CAACC,IAAV,GAAiB,MAAjB;AACAD,IAAAA,SAAS,CAACpD,sBAAV,GAAmC,CAAnC;AACAoD,IAAAA,SAAS,CAACE,sBAAV,GAAmC,CAAnC;AACAF,IAAAA,SAAS,CAACG,gBAAV,GAA6B,KAA7B;AACAH,IAAAA,SAAS,CAACI,SAAV,GAAsB,KAAtB;AACAJ,IAAAA,SAAS,CAAC7F,OAAV,GAAoBrC,WAAW,GAAGE,iBAAd,GAAkCD,iBAAtD;AACH,GARuB,EAAxB;;AASA,SAAOiB,IAAP;AACH,CAjWW,CAiWVlC,WAjWU,CAAZ;;AAkWA,eAAekC,IAAf","sourcesContent":["import { __extends } from \"tslib\";\nimport Displayable, { DEFAULT_COMMON_STYLE, DEFAULT_COMMON_ANIMATION_PROPS } from './Displayable';\nimport PathProxy from '../core/PathProxy';\nimport * as pathContain from '../contain/path';\nimport { defaults, keys, extend, clone, isString, createObject } from '../core/util';\nimport { lum } from '../tool/color';\nimport { DARK_LABEL_COLOR, LIGHT_LABEL_COLOR, DARK_MODE_THRESHOLD, LIGHTER_LABEL_COLOR } from '../config';\nimport { REDARAW_BIT, SHAPE_CHANGED_BIT, STYLE_CHANGED_BIT } from './constants';\nexport var DEFAULT_PATH_STYLE = defaults({\n    fill: '#000',\n    stroke: null,\n    strokePercent: 1,\n    fillOpacity: 1,\n    strokeOpacity: 1,\n    lineDashOffset: 0,\n    lineWidth: 1,\n    lineCap: 'butt',\n    miterLimit: 10,\n    strokeNoScale: false,\n    strokeFirst: false\n}, DEFAULT_COMMON_STYLE);\nexport var DEFAULT_PATH_ANIMATION_PROPS = {\n    style: defaults({\n        fill: true,\n        stroke: true,\n        strokePercent: true,\n        fillOpacity: true,\n        strokeOpacity: true,\n        lineDashOffset: true,\n        lineWidth: true,\n        miterLimit: true\n    }, DEFAULT_COMMON_ANIMATION_PROPS.style)\n};\nvar pathCopyParams = [\n    'x', 'y', 'rotation', 'scaleX', 'scaleY', 'originX', 'originY', 'invisible',\n    'culling', 'z', 'z2', 'zlevel', 'parent'\n];\nvar Path = (function (_super) {\n    __extends(Path, _super);\n    function Path(opts) {\n        return _super.call(this, opts) || this;\n    }\n    Path.prototype.update = function () {\n        var _this = this;\n        _super.prototype.update.call(this);\n        var style = this.style;\n        if (style.decal) {\n            var decalEl = this._decalEl = this._decalEl || new Path();\n            if (decalEl.buildPath === Path.prototype.buildPath) {\n                decalEl.buildPath = function (ctx) {\n                    _this.buildPath(ctx, _this.shape);\n                };\n            }\n            decalEl.silent = true;\n            var decalElStyle = decalEl.style;\n            for (var key in style) {\n                if (decalElStyle[key] !== style[key]) {\n                    decalElStyle[key] = style[key];\n                }\n            }\n            decalElStyle.fill = style.fill ? style.decal : null;\n            decalElStyle.decal = null;\n            decalElStyle.shadowColor = null;\n            style.strokeFirst && (decalElStyle.stroke = null);\n            for (var i = 0; i < pathCopyParams.length; ++i) {\n                decalEl[pathCopyParams[i]] = this[pathCopyParams[i]];\n            }\n            decalEl.__dirty |= REDARAW_BIT;\n        }\n        else if (this._decalEl) {\n            this._decalEl = null;\n        }\n    };\n    Path.prototype.getDecalElement = function () {\n        return this._decalEl;\n    };\n    Path.prototype._init = function (props) {\n        var keysArr = keys(props);\n        this.shape = this.getDefaultShape();\n        var defaultStyle = this.getDefaultStyle();\n        if (defaultStyle) {\n            this.useStyle(defaultStyle);\n        }\n        for (var i = 0; i < keysArr.length; i++) {\n            var key = keysArr[i];\n            var value = props[key];\n            if (key === 'style') {\n                if (!this.style) {\n                    this.useStyle(value);\n                }\n                else {\n                    extend(this.style, value);\n                }\n            }\n            else if (key === 'shape') {\n                extend(this.shape, value);\n            }\n            else {\n                _super.prototype.attrKV.call(this, key, value);\n            }\n        }\n        if (!this.style) {\n            this.useStyle({});\n        }\n    };\n    Path.prototype.getDefaultStyle = function () {\n        return null;\n    };\n    Path.prototype.getDefaultShape = function () {\n        return {};\n    };\n    Path.prototype.canBeInsideText = function () {\n        return this.hasFill();\n    };\n    Path.prototype.getInsideTextFill = function () {\n        var pathFill = this.style.fill;\n        if (pathFill !== 'none') {\n            if (isString(pathFill)) {\n                var fillLum = lum(pathFill, 0);\n                if (fillLum > 0.5) {\n                    return DARK_LABEL_COLOR;\n                }\n                else if (fillLum > 0.2) {\n                    return LIGHTER_LABEL_COLOR;\n                }\n                return LIGHT_LABEL_COLOR;\n            }\n            else if (pathFill) {\n                return LIGHT_LABEL_COLOR;\n            }\n        }\n        return DARK_LABEL_COLOR;\n    };\n    Path.prototype.getInsideTextStroke = function (textFill) {\n        var pathFill = this.style.fill;\n        if (isString(pathFill)) {\n            var zr = this.__zr;\n            var isDarkMode = !!(zr && zr.isDarkMode());\n            var isDarkLabel = lum(textFill, 0) < DARK_MODE_THRESHOLD;\n            if (isDarkMode === isDarkLabel) {\n                return pathFill;\n            }\n        }\n    };\n    Path.prototype.buildPath = function (ctx, shapeCfg, inBundle) { };\n    Path.prototype.pathUpdated = function () {\n        this.__dirty &= ~SHAPE_CHANGED_BIT;\n    };\n    Path.prototype.createPathProxy = function () {\n        this.path = new PathProxy(false);\n    };\n    Path.prototype.hasStroke = function () {\n        var style = this.style;\n        var stroke = style.stroke;\n        return !(stroke == null || stroke === 'none' || !(style.lineWidth > 0));\n    };\n    Path.prototype.hasFill = function () {\n        var style = this.style;\n        var fill = style.fill;\n        return fill != null && fill !== 'none';\n    };\n    Path.prototype.getBoundingRect = function () {\n        var rect = this._rect;\n        var style = this.style;\n        var needsUpdateRect = !rect;\n        if (needsUpdateRect) {\n            var firstInvoke = false;\n            if (!this.path) {\n                firstInvoke = true;\n                this.createPathProxy();\n            }\n            var path = this.path;\n            if (firstInvoke || (this.__dirty & SHAPE_CHANGED_BIT)) {\n                path.beginPath();\n                this.buildPath(path, this.shape, false);\n                this.pathUpdated();\n            }\n            rect = path.getBoundingRect();\n        }\n        this._rect = rect;\n        if (this.hasStroke() && this.path && this.path.len() > 0) {\n            var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n            if (this.__dirty || needsUpdateRect) {\n                rectWithStroke.copy(rect);\n                var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                var w = style.lineWidth;\n                if (!this.hasFill()) {\n                    var strokeContainThreshold = this.strokeContainThreshold;\n                    w = Math.max(w, strokeContainThreshold == null ? 4 : strokeContainThreshold);\n                }\n                if (lineScale > 1e-10) {\n                    rectWithStroke.width += w / lineScale;\n                    rectWithStroke.height += w / lineScale;\n                    rectWithStroke.x -= w / lineScale / 2;\n                    rectWithStroke.y -= w / lineScale / 2;\n                }\n            }\n            return rectWithStroke;\n        }\n        return rect;\n    };\n    Path.prototype.contain = function (x, y) {\n        var localPos = this.transformCoordToLocal(x, y);\n        var rect = this.getBoundingRect();\n        var style = this.style;\n        x = localPos[0];\n        y = localPos[1];\n        if (rect.contain(x, y)) {\n            var pathProxy = this.path;\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                if (lineScale > 1e-10) {\n                    if (!this.hasFill()) {\n                        lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                    }\n                    if (pathContain.containStroke(pathProxy, lineWidth / lineScale, x, y)) {\n                        return true;\n                    }\n                }\n            }\n            if (this.hasFill()) {\n                return pathContain.contain(pathProxy, x, y);\n            }\n        }\n        return false;\n    };\n    Path.prototype.dirtyShape = function () {\n        this.__dirty |= SHAPE_CHANGED_BIT;\n        if (this._rect) {\n            this._rect = null;\n        }\n        if (this._decalEl) {\n            this._decalEl.dirtyShape();\n        }\n        this.markRedraw();\n    };\n    Path.prototype.dirty = function () {\n        this.dirtyStyle();\n        this.dirtyShape();\n    };\n    Path.prototype.animateShape = function (loop) {\n        return this.animate('shape', loop);\n    };\n    Path.prototype.updateDuringAnimation = function (targetKey) {\n        if (targetKey === 'style') {\n            this.dirtyStyle();\n        }\n        else if (targetKey === 'shape') {\n            this.dirtyShape();\n        }\n        else {\n            this.markRedraw();\n        }\n    };\n    Path.prototype.attrKV = function (key, value) {\n        if (key === 'shape') {\n            this.setShape(value);\n        }\n        else {\n            _super.prototype.attrKV.call(this, key, value);\n        }\n    };\n    Path.prototype.setShape = function (keyOrObj, value) {\n        var shape = this.shape;\n        if (!shape) {\n            shape = this.shape = {};\n        }\n        if (typeof keyOrObj === 'string') {\n            shape[keyOrObj] = value;\n        }\n        else {\n            extend(shape, keyOrObj);\n        }\n        this.dirtyShape();\n        return this;\n    };\n    Path.prototype.shapeChanged = function () {\n        return !!(this.__dirty & SHAPE_CHANGED_BIT);\n    };\n    Path.prototype.createStyle = function (obj) {\n        return createObject(DEFAULT_PATH_STYLE, obj);\n    };\n    Path.prototype._innerSaveToNormal = function (toState) {\n        _super.prototype._innerSaveToNormal.call(this, toState);\n        var normalState = this._normalState;\n        if (toState.shape && !normalState.shape) {\n            normalState.shape = extend({}, this.shape);\n        }\n    };\n    Path.prototype._applyStateObj = function (stateName, state, normalState, keepCurrentStates, transition, animationCfg) {\n        _super.prototype._applyStateObj.call(this, stateName, state, normalState, keepCurrentStates, transition, animationCfg);\n        var needsRestoreToNormal = !(state && keepCurrentStates);\n        var targetShape;\n        if (state && state.shape) {\n            if (transition) {\n                if (keepCurrentStates) {\n                    targetShape = state.shape;\n                }\n                else {\n                    targetShape = extend({}, normalState.shape);\n                    extend(targetShape, state.shape);\n                }\n            }\n            else {\n                targetShape = extend({}, keepCurrentStates ? this.shape : normalState.shape);\n                extend(targetShape, state.shape);\n            }\n        }\n        else if (needsRestoreToNormal) {\n            targetShape = normalState.shape;\n        }\n        if (targetShape) {\n            if (transition) {\n                this.shape = extend({}, this.shape);\n                var targetShapePrimaryProps = {};\n                var shapeKeys = keys(targetShape);\n                for (var i = 0; i < shapeKeys.length; i++) {\n                    var key = shapeKeys[i];\n                    if (typeof targetShape[key] === 'object') {\n                        this.shape[key] = targetShape[key];\n                    }\n                    else {\n                        targetShapePrimaryProps[key] = targetShape[key];\n                    }\n                }\n                this._transitionState(stateName, {\n                    shape: targetShapePrimaryProps\n                }, animationCfg);\n            }\n            else {\n                this.shape = targetShape;\n                this.dirtyShape();\n            }\n        }\n    };\n    Path.prototype._mergeStates = function (states) {\n        var mergedState = _super.prototype._mergeStates.call(this, states);\n        var mergedShape;\n        for (var i = 0; i < states.length; i++) {\n            var state = states[i];\n            if (state.shape) {\n                mergedShape = mergedShape || {};\n                this._mergeStyle(mergedShape, state.shape);\n            }\n        }\n        if (mergedShape) {\n            mergedState.shape = mergedShape;\n        }\n        return mergedState;\n    };\n    Path.prototype.getAnimationStyleProps = function () {\n        return DEFAULT_PATH_ANIMATION_PROPS;\n    };\n    Path.prototype.isZeroArea = function () {\n        return false;\n    };\n    Path.extend = function (defaultProps) {\n        var Sub = (function (_super) {\n            __extends(Sub, _super);\n            function Sub(opts) {\n                var _this = _super.call(this, opts) || this;\n                defaultProps.init && defaultProps.init.call(_this, opts);\n                return _this;\n            }\n            Sub.prototype.getDefaultStyle = function () {\n                return clone(defaultProps.style);\n            };\n            Sub.prototype.getDefaultShape = function () {\n                return clone(defaultProps.shape);\n            };\n            return Sub;\n        }(Path));\n        for (var key in defaultProps) {\n            if (typeof defaultProps[key] === 'function') {\n                Sub.prototype[key] = defaultProps[key];\n            }\n        }\n        return Sub;\n    };\n    Path.initDefaultProps = (function () {\n        var pathProto = Path.prototype;\n        pathProto.type = 'path';\n        pathProto.strokeContainThreshold = 5;\n        pathProto.segmentIgnoreThreshold = 0;\n        pathProto.subPixelOptimize = false;\n        pathProto.autoBatch = false;\n        pathProto.__dirty = REDARAW_BIT | STYLE_CHANGED_BIT | SHAPE_CHANGED_BIT;\n    })();\n    return Path;\n}(Displayable));\nexport default Path;\n"]},"metadata":{},"sourceType":"module"}