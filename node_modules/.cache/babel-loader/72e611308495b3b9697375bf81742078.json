{"ast":null,"code":"import Transformable from './core/Transformable';\nimport Animator, { cloneValue } from './animation/Animator';\nimport BoundingRect from './core/BoundingRect';\nimport Eventful from './core/Eventful';\nimport { calculateTextPosition, parsePercent } from './contain/text';\nimport { guid, isObject, keys, extend, indexOf, logError, mixin, isArrayLike, isTypedArray } from './core/util';\nimport { LIGHT_LABEL_COLOR, DARK_LABEL_COLOR } from './config';\nimport { parse, stringify } from './tool/color';\nimport env from './core/env';\nimport { REDARAW_BIT } from './graphic/constants';\nexport var PRESERVED_NORMAL_STATE = '__zr_normal__';\nvar PRIMARY_STATES_KEYS = ['x', 'y', 'scaleX', 'scaleY', 'originX', 'originY', 'rotation', 'ignore'];\nvar DEFAULT_ANIMATABLE_MAP = {\n  x: true,\n  y: true,\n  scaleX: true,\n  scaleY: true,\n  originX: true,\n  originY: true,\n  rotation: true,\n  ignore: false\n};\nvar tmpTextPosCalcRes = {};\nvar tmpBoundingRect = new BoundingRect(0, 0, 0, 0);\n\nvar Element = function () {\n  function Element(props) {\n    this.id = guid();\n    this.animators = [];\n    this.currentStates = [];\n    this.states = {};\n\n    this._init(props);\n  }\n\n  Element.prototype._init = function (props) {\n    this.attr(props);\n  };\n\n  Element.prototype.drift = function (dx, dy, e) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.markRedraw();\n  };\n\n  Element.prototype.beforeUpdate = function () {};\n\n  Element.prototype.afterUpdate = function () {};\n\n  Element.prototype.update = function () {\n    this.updateTransform();\n\n    if (this.__dirty) {\n      this.updateInnerText();\n    }\n  };\n\n  Element.prototype.updateInnerText = function (forceUpdate) {\n    var textEl = this._textContent;\n\n    if (textEl && (!textEl.ignore || forceUpdate)) {\n      if (!this.textConfig) {\n        this.textConfig = {};\n      }\n\n      var textConfig = this.textConfig;\n      var isLocal = textConfig.local;\n      var attachedTransform = textEl.attachedTransform;\n      var textAlign = void 0;\n      var textVerticalAlign = void 0;\n      var textStyleChanged = false;\n\n      if (isLocal) {\n        attachedTransform.parent = this;\n      } else {\n        attachedTransform.parent = null;\n      }\n\n      var innerOrigin = false;\n      attachedTransform.x = textEl.x;\n      attachedTransform.y = textEl.y;\n      attachedTransform.originX = textEl.originX;\n      attachedTransform.originY = textEl.originY;\n      attachedTransform.rotation = textEl.rotation;\n      attachedTransform.scaleX = textEl.scaleX;\n      attachedTransform.scaleY = textEl.scaleY;\n\n      if (textConfig.position != null) {\n        var layoutRect = tmpBoundingRect;\n\n        if (textConfig.layoutRect) {\n          layoutRect.copy(textConfig.layoutRect);\n        } else {\n          layoutRect.copy(this.getBoundingRect());\n        }\n\n        if (!isLocal) {\n          layoutRect.applyTransform(this.transform);\n        }\n\n        if (this.calculateTextPosition) {\n          this.calculateTextPosition(tmpTextPosCalcRes, textConfig, layoutRect);\n        } else {\n          calculateTextPosition(tmpTextPosCalcRes, textConfig, layoutRect);\n        }\n\n        attachedTransform.x = tmpTextPosCalcRes.x;\n        attachedTransform.y = tmpTextPosCalcRes.y;\n        textAlign = tmpTextPosCalcRes.align;\n        textVerticalAlign = tmpTextPosCalcRes.verticalAlign;\n        var textOrigin = textConfig.origin;\n\n        if (textOrigin && textConfig.rotation != null) {\n          var relOriginX = void 0;\n          var relOriginY = void 0;\n\n          if (textOrigin === 'center') {\n            relOriginX = layoutRect.width * 0.5;\n            relOriginY = layoutRect.height * 0.5;\n          } else {\n            relOriginX = parsePercent(textOrigin[0], layoutRect.width);\n            relOriginY = parsePercent(textOrigin[1], layoutRect.height);\n          }\n\n          innerOrigin = true;\n          attachedTransform.originX = -attachedTransform.x + relOriginX + (isLocal ? 0 : layoutRect.x);\n          attachedTransform.originY = -attachedTransform.y + relOriginY + (isLocal ? 0 : layoutRect.y);\n        }\n      }\n\n      if (textConfig.rotation != null) {\n        attachedTransform.rotation = textConfig.rotation;\n      }\n\n      var textOffset = textConfig.offset;\n\n      if (textOffset) {\n        attachedTransform.x += textOffset[0];\n        attachedTransform.y += textOffset[1];\n\n        if (!innerOrigin) {\n          attachedTransform.originX = -textOffset[0];\n          attachedTransform.originY = -textOffset[1];\n        }\n      }\n\n      var isInside = textConfig.inside == null ? typeof textConfig.position === 'string' && textConfig.position.indexOf('inside') >= 0 : textConfig.inside;\n      var innerTextDefaultStyle = this._innerTextDefaultStyle || (this._innerTextDefaultStyle = {});\n      var textFill = void 0;\n      var textStroke = void 0;\n      var autoStroke = void 0;\n\n      if (isInside && this.canBeInsideText()) {\n        textFill = textConfig.insideFill;\n        textStroke = textConfig.insideStroke;\n\n        if (textFill == null || textFill === 'auto') {\n          textFill = this.getInsideTextFill();\n        }\n\n        if (textStroke == null || textStroke === 'auto') {\n          textStroke = this.getInsideTextStroke(textFill);\n          autoStroke = true;\n        }\n      } else {\n        textFill = textConfig.outsideFill;\n        textStroke = textConfig.outsideStroke;\n\n        if (textFill == null || textFill === 'auto') {\n          textFill = this.getOutsideFill();\n        }\n\n        if (textStroke == null || textStroke === 'auto') {\n          textStroke = this.getOutsideStroke(textFill);\n          autoStroke = true;\n        }\n      }\n\n      textFill = textFill || '#000';\n\n      if (textFill !== innerTextDefaultStyle.fill || textStroke !== innerTextDefaultStyle.stroke || autoStroke !== innerTextDefaultStyle.autoStroke || textAlign !== innerTextDefaultStyle.align || textVerticalAlign !== innerTextDefaultStyle.verticalAlign) {\n        textStyleChanged = true;\n        innerTextDefaultStyle.fill = textFill;\n        innerTextDefaultStyle.stroke = textStroke;\n        innerTextDefaultStyle.autoStroke = autoStroke;\n        innerTextDefaultStyle.align = textAlign;\n        innerTextDefaultStyle.verticalAlign = textVerticalAlign;\n        textEl.setDefaultTextStyle(innerTextDefaultStyle);\n      }\n\n      textEl.__dirty |= REDARAW_BIT;\n\n      if (textStyleChanged) {\n        textEl.dirtyStyle(true);\n      }\n    }\n  };\n\n  Element.prototype.canBeInsideText = function () {\n    return true;\n  };\n\n  Element.prototype.getInsideTextFill = function () {\n    return '#fff';\n  };\n\n  Element.prototype.getInsideTextStroke = function (textFill) {\n    return '#000';\n  };\n\n  Element.prototype.getOutsideFill = function () {\n    return this.__zr && this.__zr.isDarkMode() ? LIGHT_LABEL_COLOR : DARK_LABEL_COLOR;\n  };\n\n  Element.prototype.getOutsideStroke = function (textFill) {\n    var backgroundColor = this.__zr && this.__zr.getBackgroundColor();\n\n    var colorArr = typeof backgroundColor === 'string' && parse(backgroundColor);\n\n    if (!colorArr) {\n      colorArr = [255, 255, 255, 1];\n    }\n\n    var alpha = colorArr[3];\n\n    var isDark = this.__zr.isDarkMode();\n\n    for (var i = 0; i < 3; i++) {\n      colorArr[i] = colorArr[i] * alpha + (isDark ? 0 : 255) * (1 - alpha);\n    }\n\n    colorArr[3] = 1;\n    return stringify(colorArr, 'rgba');\n  };\n\n  Element.prototype.traverse = function (cb, context) {};\n\n  Element.prototype.attrKV = function (key, value) {\n    if (key === 'textConfig') {\n      this.setTextConfig(value);\n    } else if (key === 'textContent') {\n      this.setTextContent(value);\n    } else if (key === 'clipPath') {\n      this.setClipPath(value);\n    } else if (key === 'extra') {\n      this.extra = this.extra || {};\n      extend(this.extra, value);\n    } else {\n      this[key] = value;\n    }\n  };\n\n  Element.prototype.hide = function () {\n    this.ignore = true;\n    this.markRedraw();\n  };\n\n  Element.prototype.show = function () {\n    this.ignore = false;\n    this.markRedraw();\n  };\n\n  Element.prototype.attr = function (keyOrObj, value) {\n    if (typeof keyOrObj === 'string') {\n      this.attrKV(keyOrObj, value);\n    } else if (isObject(keyOrObj)) {\n      var obj = keyOrObj;\n      var keysArr = keys(obj);\n\n      for (var i = 0; i < keysArr.length; i++) {\n        var key = keysArr[i];\n        this.attrKV(key, keyOrObj[key]);\n      }\n    }\n\n    this.markRedraw();\n    return this;\n  };\n\n  Element.prototype.saveCurrentToNormalState = function (toState) {\n    this._innerSaveToNormal(toState);\n\n    var normalState = this._normalState;\n\n    for (var i = 0; i < this.animators.length; i++) {\n      var animator = this.animators[i];\n      var fromStateTransition = animator.__fromStateTransition;\n\n      if (fromStateTransition && fromStateTransition !== PRESERVED_NORMAL_STATE) {\n        continue;\n      }\n\n      var targetName = animator.targetName;\n      var target = targetName ? normalState[targetName] : normalState;\n      animator.saveFinalToTarget(target);\n    }\n  };\n\n  Element.prototype._innerSaveToNormal = function (toState) {\n    var normalState = this._normalState;\n\n    if (!normalState) {\n      normalState = this._normalState = {};\n    }\n\n    if (toState.textConfig && !normalState.textConfig) {\n      normalState.textConfig = this.textConfig;\n    }\n\n    this._savePrimaryToNormal(toState, normalState, PRIMARY_STATES_KEYS);\n  };\n\n  Element.prototype._savePrimaryToNormal = function (toState, normalState, primaryKeys) {\n    for (var i = 0; i < primaryKeys.length; i++) {\n      var key = primaryKeys[i];\n\n      if (toState[key] != null && !(key in normalState)) {\n        normalState[key] = this[key];\n      }\n    }\n  };\n\n  Element.prototype.hasState = function () {\n    return this.currentStates.length > 0;\n  };\n\n  Element.prototype.getState = function (name) {\n    return this.states[name];\n  };\n\n  Element.prototype.ensureState = function (name) {\n    var states = this.states;\n\n    if (!states[name]) {\n      states[name] = {};\n    }\n\n    return states[name];\n  };\n\n  Element.prototype.clearStates = function (noAnimation) {\n    this.useState(PRESERVED_NORMAL_STATE, false, noAnimation);\n  };\n\n  Element.prototype.useState = function (stateName, keepCurrentStates, noAnimation, forceUseHoverLayer) {\n    var toNormalState = stateName === PRESERVED_NORMAL_STATE;\n    var hasStates = this.hasState();\n\n    if (!hasStates && toNormalState) {\n      return;\n    }\n\n    var currentStates = this.currentStates;\n    var animationCfg = this.stateTransition;\n\n    if (indexOf(currentStates, stateName) >= 0 && (keepCurrentStates || currentStates.length === 1)) {\n      return;\n    }\n\n    var state;\n\n    if (this.stateProxy && !toNormalState) {\n      state = this.stateProxy(stateName);\n    }\n\n    if (!state) {\n      state = this.states && this.states[stateName];\n    }\n\n    if (!state && !toNormalState) {\n      logError(\"State \" + stateName + \" not exists.\");\n      return;\n    }\n\n    if (!toNormalState) {\n      this.saveCurrentToNormalState(state);\n    }\n\n    var useHoverLayer = !!(state && state.hoverLayer || forceUseHoverLayer);\n\n    if (useHoverLayer) {\n      this._toggleHoverLayerFlag(true);\n    }\n\n    this._applyStateObj(stateName, state, this._normalState, keepCurrentStates, !noAnimation && !this.__inHover && animationCfg && animationCfg.duration > 0, animationCfg);\n\n    var textContent = this._textContent;\n    var textGuide = this._textGuide;\n\n    if (textContent) {\n      textContent.useState(stateName, keepCurrentStates, noAnimation, useHoverLayer);\n    }\n\n    if (textGuide) {\n      textGuide.useState(stateName, keepCurrentStates, noAnimation, useHoverLayer);\n    }\n\n    if (toNormalState) {\n      this.currentStates = [];\n      this._normalState = {};\n    } else {\n      if (!keepCurrentStates) {\n        this.currentStates = [stateName];\n      } else {\n        this.currentStates.push(stateName);\n      }\n    }\n\n    this._updateAnimationTargets();\n\n    this.markRedraw();\n\n    if (!useHoverLayer && this.__inHover) {\n      this._toggleHoverLayerFlag(false);\n\n      this.__dirty &= ~REDARAW_BIT;\n    }\n\n    return state;\n  };\n\n  Element.prototype.useStates = function (states, noAnimation, forceUseHoverLayer) {\n    if (!states.length) {\n      this.clearStates();\n    } else {\n      var stateObjects = [];\n      var currentStates = this.currentStates;\n      var len = states.length;\n      var notChange = len === currentStates.length;\n\n      if (notChange) {\n        for (var i = 0; i < len; i++) {\n          if (states[i] !== currentStates[i]) {\n            notChange = false;\n            break;\n          }\n        }\n      }\n\n      if (notChange) {\n        return;\n      }\n\n      for (var i = 0; i < len; i++) {\n        var stateName = states[i];\n        var stateObj = void 0;\n\n        if (this.stateProxy) {\n          stateObj = this.stateProxy(stateName, states);\n        }\n\n        if (!stateObj) {\n          stateObj = this.states[stateName];\n        }\n\n        if (stateObj) {\n          stateObjects.push(stateObj);\n        }\n      }\n\n      var lastStateObj = stateObjects[len - 1];\n      var useHoverLayer = !!(lastStateObj && lastStateObj.hoverLayer || forceUseHoverLayer);\n\n      if (useHoverLayer) {\n        this._toggleHoverLayerFlag(true);\n      }\n\n      var mergedState = this._mergeStates(stateObjects);\n\n      var animationCfg = this.stateTransition;\n      this.saveCurrentToNormalState(mergedState);\n\n      this._applyStateObj(states.join(','), mergedState, this._normalState, false, !noAnimation && !this.__inHover && animationCfg && animationCfg.duration > 0, animationCfg);\n\n      var textContent = this._textContent;\n      var textGuide = this._textGuide;\n\n      if (textContent) {\n        textContent.useStates(states, noAnimation, useHoverLayer);\n      }\n\n      if (textGuide) {\n        textGuide.useStates(states, noAnimation, useHoverLayer);\n      }\n\n      this._updateAnimationTargets();\n\n      this.currentStates = states.slice();\n      this.markRedraw();\n\n      if (!useHoverLayer && this.__inHover) {\n        this._toggleHoverLayerFlag(false);\n\n        this.__dirty &= ~REDARAW_BIT;\n      }\n    }\n  };\n\n  Element.prototype._updateAnimationTargets = function () {\n    for (var i = 0; i < this.animators.length; i++) {\n      var animator = this.animators[i];\n\n      if (animator.targetName) {\n        animator.changeTarget(this[animator.targetName]);\n      }\n    }\n  };\n\n  Element.prototype.removeState = function (state) {\n    var idx = indexOf(this.currentStates, state);\n\n    if (idx >= 0) {\n      var currentStates = this.currentStates.slice();\n      currentStates.splice(idx, 1);\n      this.useStates(currentStates);\n    }\n  };\n\n  Element.prototype.replaceState = function (oldState, newState, forceAdd) {\n    var currentStates = this.currentStates.slice();\n    var idx = indexOf(currentStates, oldState);\n    var newStateExists = indexOf(currentStates, newState) >= 0;\n\n    if (idx >= 0) {\n      if (!newStateExists) {\n        currentStates[idx] = newState;\n      } else {\n        currentStates.splice(idx, 1);\n      }\n    } else if (forceAdd && !newStateExists) {\n      currentStates.push(newState);\n    }\n\n    this.useStates(currentStates);\n  };\n\n  Element.prototype.toggleState = function (state, enable) {\n    if (enable) {\n      this.useState(state, true);\n    } else {\n      this.removeState(state);\n    }\n  };\n\n  Element.prototype._mergeStates = function (states) {\n    var mergedState = {};\n    var mergedTextConfig;\n\n    for (var i = 0; i < states.length; i++) {\n      var state = states[i];\n      extend(mergedState, state);\n\n      if (state.textConfig) {\n        mergedTextConfig = mergedTextConfig || {};\n        extend(mergedTextConfig, state.textConfig);\n      }\n    }\n\n    if (mergedTextConfig) {\n      mergedState.textConfig = mergedTextConfig;\n    }\n\n    return mergedState;\n  };\n\n  Element.prototype._applyStateObj = function (stateName, state, normalState, keepCurrentStates, transition, animationCfg) {\n    var needsRestoreToNormal = !(state && keepCurrentStates);\n\n    if (state && state.textConfig) {\n      this.textConfig = extend({}, keepCurrentStates ? this.textConfig : normalState.textConfig);\n      extend(this.textConfig, state.textConfig);\n    } else if (needsRestoreToNormal) {\n      if (normalState.textConfig) {\n        this.textConfig = normalState.textConfig;\n      }\n    }\n\n    var transitionTarget = {};\n    var hasTransition = false;\n\n    for (var i = 0; i < PRIMARY_STATES_KEYS.length; i++) {\n      var key = PRIMARY_STATES_KEYS[i];\n      var propNeedsTransition = transition && DEFAULT_ANIMATABLE_MAP[key];\n\n      if (state && state[key] != null) {\n        if (propNeedsTransition) {\n          hasTransition = true;\n          transitionTarget[key] = state[key];\n        } else {\n          this[key] = state[key];\n        }\n      } else if (needsRestoreToNormal) {\n        if (normalState[key] != null) {\n          if (propNeedsTransition) {\n            hasTransition = true;\n            transitionTarget[key] = normalState[key];\n          } else {\n            this[key] = normalState[key];\n          }\n        }\n      }\n    }\n\n    if (!transition) {\n      for (var i = 0; i < this.animators.length; i++) {\n        var animator = this.animators[i];\n        var targetName = animator.targetName;\n\n        animator.__changeFinalValue(targetName ? (state || normalState)[targetName] : state || normalState);\n      }\n    }\n\n    if (hasTransition) {\n      this._transitionState(stateName, transitionTarget, animationCfg);\n    }\n  };\n\n  Element.prototype._attachComponent = function (componentEl) {\n    if (componentEl.__zr && !componentEl.__hostTarget) {\n      throw new Error('Text element has been added to zrender.');\n    }\n\n    if (componentEl === this) {\n      throw new Error('Recursive component attachment.');\n    }\n\n    var zr = this.__zr;\n\n    if (zr) {\n      componentEl.addSelfToZr(zr);\n    }\n\n    componentEl.__zr = zr;\n    componentEl.__hostTarget = this;\n  };\n\n  Element.prototype._detachComponent = function (componentEl) {\n    if (componentEl.__zr) {\n      componentEl.removeSelfFromZr(componentEl.__zr);\n    }\n\n    componentEl.__zr = null;\n    componentEl.__hostTarget = null;\n  };\n\n  Element.prototype.getClipPath = function () {\n    return this._clipPath;\n  };\n\n  Element.prototype.setClipPath = function (clipPath) {\n    if (this._clipPath && this._clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this._attachComponent(clipPath);\n\n    this._clipPath = clipPath;\n    this.markRedraw();\n  };\n\n  Element.prototype.removeClipPath = function () {\n    var clipPath = this._clipPath;\n\n    if (clipPath) {\n      this._detachComponent(clipPath);\n\n      this._clipPath = null;\n      this.markRedraw();\n    }\n  };\n\n  Element.prototype.getTextContent = function () {\n    return this._textContent;\n  };\n\n  Element.prototype.setTextContent = function (textEl) {\n    var previousTextContent = this._textContent;\n\n    if (previousTextContent === textEl) {\n      return;\n    }\n\n    if (previousTextContent && previousTextContent !== textEl) {\n      this.removeTextContent();\n    }\n\n    if (textEl.__zr && !textEl.__hostTarget) {\n      throw new Error('Text element has been added to zrender.');\n    }\n\n    textEl.attachedTransform = new Transformable();\n\n    this._attachComponent(textEl);\n\n    this._textContent = textEl;\n    this.markRedraw();\n  };\n\n  Element.prototype.setTextConfig = function (cfg) {\n    if (!this.textConfig) {\n      this.textConfig = {};\n    }\n\n    extend(this.textConfig, cfg);\n    this.markRedraw();\n  };\n\n  Element.prototype.removeTextConfig = function () {\n    this.textConfig = null;\n    this.markRedraw();\n  };\n\n  Element.prototype.removeTextContent = function () {\n    var textEl = this._textContent;\n\n    if (textEl) {\n      textEl.attachedTransform = null;\n\n      this._detachComponent(textEl);\n\n      this._textContent = null;\n      this._innerTextDefaultStyle = null;\n      this.markRedraw();\n    }\n  };\n\n  Element.prototype.getTextGuideLine = function () {\n    return this._textGuide;\n  };\n\n  Element.prototype.setTextGuideLine = function (guideLine) {\n    if (this._textGuide && this._textGuide !== guideLine) {\n      this.removeTextGuideLine();\n    }\n\n    this._attachComponent(guideLine);\n\n    this._textGuide = guideLine;\n    this.markRedraw();\n  };\n\n  Element.prototype.removeTextGuideLine = function () {\n    var textGuide = this._textGuide;\n\n    if (textGuide) {\n      this._detachComponent(textGuide);\n\n      this._textGuide = null;\n      this.markRedraw();\n    }\n  };\n\n  Element.prototype.markRedraw = function () {\n    this.__dirty |= REDARAW_BIT;\n    var zr = this.__zr;\n\n    if (zr) {\n      if (this.__inHover) {\n        zr.refreshHover();\n      } else {\n        zr.refresh();\n      }\n    }\n\n    if (this.__hostTarget) {\n      this.__hostTarget.markRedraw();\n    }\n  };\n\n  Element.prototype.dirty = function () {\n    this.markRedraw();\n  };\n\n  Element.prototype._toggleHoverLayerFlag = function (inHover) {\n    this.__inHover = inHover;\n    var textContent = this._textContent;\n    var textGuide = this._textGuide;\n\n    if (textContent) {\n      textContent.__inHover = inHover;\n    }\n\n    if (textGuide) {\n      textGuide.__inHover = inHover;\n    }\n  };\n\n  Element.prototype.addSelfToZr = function (zr) {\n    this.__zr = zr;\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this._clipPath) {\n      this._clipPath.addSelfToZr(zr);\n    }\n\n    if (this._textContent) {\n      this._textContent.addSelfToZr(zr);\n    }\n\n    if (this._textGuide) {\n      this._textGuide.addSelfToZr(zr);\n    }\n  };\n\n  Element.prototype.removeSelfFromZr = function (zr) {\n    this.__zr = null;\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this._clipPath) {\n      this._clipPath.removeSelfFromZr(zr);\n    }\n\n    if (this._textContent) {\n      this._textContent.removeSelfFromZr(zr);\n    }\n\n    if (this._textGuide) {\n      this._textGuide.removeSelfFromZr(zr);\n    }\n  };\n\n  Element.prototype.animate = function (key, loop) {\n    var target = key ? this[key] : this;\n\n    if (!target) {\n      logError('Property \"' + key + '\" is not existed in element ' + this.id);\n      return;\n    }\n\n    var animator = new Animator(target, loop);\n    this.addAnimator(animator, key);\n    return animator;\n  };\n\n  Element.prototype.addAnimator = function (animator, key) {\n    var zr = this.__zr;\n    var el = this;\n    animator.during(function () {\n      el.updateDuringAnimation(key);\n    }).done(function () {\n      var animators = el.animators;\n      var idx = indexOf(animators, animator);\n\n      if (idx >= 0) {\n        animators.splice(idx, 1);\n      }\n    });\n    this.animators.push(animator);\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    zr && zr.wakeUp();\n  };\n\n  Element.prototype.updateDuringAnimation = function (key) {\n    this.markRedraw();\n  };\n\n  Element.prototype.stopAnimation = function (scope, forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n    var leftAnimators = [];\n\n    for (var i = 0; i < len; i++) {\n      var animator = animators[i];\n\n      if (!scope || scope === animator.scope) {\n        animator.stop(forwardToLast);\n      } else {\n        leftAnimators.push(animator);\n      }\n    }\n\n    this.animators = leftAnimators;\n    return this;\n  };\n\n  Element.prototype.animateTo = function (target, cfg, animationProps) {\n    animateTo(this, target, cfg, animationProps);\n  };\n\n  Element.prototype.animateFrom = function (target, cfg, animationProps) {\n    animateTo(this, target, cfg, animationProps, true);\n  };\n\n  Element.prototype._transitionState = function (stateName, target, cfg, animationProps) {\n    var animators = animateTo(this, target, cfg, animationProps);\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].__fromStateTransition = stateName;\n    }\n  };\n\n  Element.prototype.getBoundingRect = function () {\n    return null;\n  };\n\n  Element.prototype.getPaintRect = function () {\n    return null;\n  };\n\n  Element.initDefaultProps = function () {\n    var elProto = Element.prototype;\n    elProto.type = 'element';\n    elProto.name = '';\n    elProto.ignore = false;\n    elProto.silent = false;\n    elProto.isGroup = false;\n    elProto.draggable = false;\n    elProto.dragging = false;\n    elProto.ignoreClip = false;\n    elProto.__inHover = false;\n    elProto.__dirty = REDARAW_BIT;\n    var logs = {};\n\n    function logDeprecatedError(key, xKey, yKey) {\n      if (!logs[key + xKey + yKey]) {\n        console.warn(\"DEPRECATED: '\" + key + \"' has been deprecated. use '\" + xKey + \"', '\" + yKey + \"' instead\");\n        logs[key + xKey + yKey] = true;\n      }\n    }\n\n    function createLegacyProperty(key, privateKey, xKey, yKey) {\n      Object.defineProperty(elProto, key, {\n        get: function () {\n          logDeprecatedError(key, xKey, yKey);\n\n          if (!this[privateKey]) {\n            var pos = this[privateKey] = [];\n            enhanceArray(this, pos);\n          }\n\n          return this[privateKey];\n        },\n        set: function (pos) {\n          logDeprecatedError(key, xKey, yKey);\n          this[xKey] = pos[0];\n          this[yKey] = pos[1];\n          this[privateKey] = pos;\n          enhanceArray(this, pos);\n        }\n      });\n\n      function enhanceArray(self, pos) {\n        Object.defineProperty(pos, 0, {\n          get: function () {\n            return self[xKey];\n          },\n          set: function (val) {\n            self[xKey] = val;\n          }\n        });\n        Object.defineProperty(pos, 1, {\n          get: function () {\n            return self[yKey];\n          },\n          set: function (val) {\n            self[yKey] = val;\n          }\n        });\n      }\n    }\n\n    if (Object.defineProperty && (!env.browser.ie || env.browser.version > 8)) {\n      createLegacyProperty('position', '_legacyPos', 'x', 'y');\n      createLegacyProperty('scale', '_legacyScale', 'scaleX', 'scaleY');\n      createLegacyProperty('origin', '_legacyOrigin', 'originX', 'originY');\n    }\n  }();\n\n  return Element;\n}();\n\nmixin(Element, Eventful);\nmixin(Element, Transformable);\n\nfunction animateTo(animatable, target, cfg, animationProps, reverse) {\n  cfg = cfg || {};\n  var animators = [];\n  animateToShallow(animatable, '', animatable, target, cfg, animationProps, animators, reverse);\n  var finishCount = animators.length;\n  var doneHappened = false;\n  var cfgDone = cfg.done;\n  var cfgAborted = cfg.aborted;\n\n  var doneCb = function () {\n    doneHappened = true;\n    finishCount--;\n\n    if (finishCount <= 0) {\n      doneHappened ? cfgDone && cfgDone() : cfgAborted && cfgAborted();\n    }\n  };\n\n  var abortedCb = function () {\n    finishCount--;\n\n    if (finishCount <= 0) {\n      doneHappened ? cfgDone && cfgDone() : cfgAborted && cfgAborted();\n    }\n  };\n\n  if (!finishCount) {\n    cfgDone && cfgDone();\n  }\n\n  if (animators.length > 0 && cfg.during) {\n    animators[0].during(function (target, percent) {\n      cfg.during(percent);\n    });\n  }\n\n  for (var i = 0; i < animators.length; i++) {\n    var animator = animators[i];\n\n    if (doneCb) {\n      animator.done(doneCb);\n    }\n\n    if (abortedCb) {\n      animator.aborted(abortedCb);\n    }\n\n    animator.start(cfg.easing, cfg.force);\n  }\n\n  return animators;\n}\n\nfunction copyArrShallow(source, target, len) {\n  for (var i = 0; i < len; i++) {\n    source[i] = target[i];\n  }\n}\n\nfunction is2DArray(value) {\n  return isArrayLike(value[0]);\n}\n\nfunction copyValue(target, source, key) {\n  if (isArrayLike(source[key])) {\n    if (!isArrayLike(target[key])) {\n      target[key] = [];\n    }\n\n    if (isTypedArray(source[key])) {\n      var len = source[key].length;\n\n      if (target[key].length !== len) {\n        target[key] = new source[key].constructor(len);\n        copyArrShallow(target[key], source[key], len);\n      }\n    } else {\n      var sourceArr = source[key];\n      var targetArr = target[key];\n      var len0 = sourceArr.length;\n\n      if (is2DArray(sourceArr)) {\n        var len1 = sourceArr[0].length;\n\n        for (var i = 0; i < len0; i++) {\n          if (!targetArr[i]) {\n            targetArr[i] = Array.prototype.slice.call(sourceArr[i]);\n          } else {\n            copyArrShallow(targetArr[i], sourceArr[i], len1);\n          }\n        }\n      } else {\n        copyArrShallow(targetArr, sourceArr, len0);\n      }\n\n      targetArr.length = sourceArr.length;\n    }\n  } else {\n    target[key] = source[key];\n  }\n}\n\nfunction animateToShallow(animatable, topKey, source, target, cfg, animationProps, animators, reverse) {\n  var animatableKeys = [];\n  var changedKeys = [];\n  var targetKeys = keys(target);\n  var duration = cfg.duration;\n  var delay = cfg.delay;\n  var additive = cfg.additive;\n  var setToFinal = cfg.setToFinal;\n  var animateAll = !isObject(animationProps);\n\n  for (var k = 0; k < targetKeys.length; k++) {\n    var innerKey = targetKeys[k];\n\n    if (source[innerKey] != null && target[innerKey] != null && (animateAll || animationProps[innerKey])) {\n      if (isObject(target[innerKey]) && !isArrayLike(target[innerKey])) {\n        if (topKey) {\n          if (!reverse) {\n            source[innerKey] = target[innerKey];\n            animatable.updateDuringAnimation(topKey);\n          }\n\n          continue;\n        }\n\n        animateToShallow(animatable, innerKey, source[innerKey], target[innerKey], cfg, animationProps && animationProps[innerKey], animators, reverse);\n      } else {\n        animatableKeys.push(innerKey);\n        changedKeys.push(innerKey);\n      }\n    } else if (!reverse) {\n      source[innerKey] = target[innerKey];\n      animatable.updateDuringAnimation(topKey);\n      changedKeys.push(innerKey);\n    }\n  }\n\n  var keyLen = animatableKeys.length;\n\n  if (keyLen > 0 || cfg.force && !animators.length) {\n    var existsAnimators = animatable.animators;\n    var existsAnimatorsOnSameTarget = [];\n\n    for (var i = 0; i < existsAnimators.length; i++) {\n      if (existsAnimators[i].targetName === topKey) {\n        existsAnimatorsOnSameTarget.push(existsAnimators[i]);\n      }\n    }\n\n    if (!additive && existsAnimatorsOnSameTarget.length) {\n      for (var i = 0; i < existsAnimatorsOnSameTarget.length; i++) {\n        var allAborted = existsAnimatorsOnSameTarget[i].stopTracks(changedKeys);\n\n        if (allAborted) {\n          var idx = indexOf(existsAnimators, existsAnimatorsOnSameTarget[i]);\n          existsAnimators.splice(idx, 1);\n        }\n      }\n    }\n\n    var revertedSource = void 0;\n    var reversedTarget = void 0;\n    var sourceClone = void 0;\n\n    if (reverse) {\n      reversedTarget = {};\n\n      if (setToFinal) {\n        revertedSource = {};\n      }\n\n      for (var i = 0; i < keyLen; i++) {\n        var innerKey = animatableKeys[i];\n        reversedTarget[innerKey] = source[innerKey];\n\n        if (setToFinal) {\n          revertedSource[innerKey] = target[innerKey];\n        } else {\n          source[innerKey] = target[innerKey];\n        }\n      }\n    } else if (setToFinal) {\n      sourceClone = {};\n\n      for (var i = 0; i < keyLen; i++) {\n        var innerKey = animatableKeys[i];\n        sourceClone[innerKey] = cloneValue(source[innerKey]);\n        copyValue(source, target, innerKey);\n      }\n    }\n\n    var animator = new Animator(source, false, additive ? existsAnimatorsOnSameTarget : null);\n    animator.targetName = topKey;\n\n    if (cfg.scope) {\n      animator.scope = cfg.scope;\n    }\n\n    if (setToFinal && revertedSource) {\n      animator.whenWithKeys(0, revertedSource, animatableKeys);\n    }\n\n    if (sourceClone) {\n      animator.whenWithKeys(0, sourceClone, animatableKeys);\n    }\n\n    animator.whenWithKeys(duration == null ? 500 : duration, reverse ? reversedTarget : target, animatableKeys).delay(delay || 0);\n    animatable.addAnimator(animator, topKey);\n    animators.push(animator);\n  }\n}\n\nexport default Element;","map":{"version":3,"sources":["C:/Users/gaooooojy/Desktop/project/node_modules/zrender/lib/Element.js"],"names":["Transformable","Animator","cloneValue","BoundingRect","Eventful","calculateTextPosition","parsePercent","guid","isObject","keys","extend","indexOf","logError","mixin","isArrayLike","isTypedArray","LIGHT_LABEL_COLOR","DARK_LABEL_COLOR","parse","stringify","env","REDARAW_BIT","PRESERVED_NORMAL_STATE","PRIMARY_STATES_KEYS","DEFAULT_ANIMATABLE_MAP","x","y","scaleX","scaleY","originX","originY","rotation","ignore","tmpTextPosCalcRes","tmpBoundingRect","Element","props","id","animators","currentStates","states","_init","prototype","attr","drift","dx","dy","e","draggable","m","transform","decomposeTransform","markRedraw","beforeUpdate","afterUpdate","update","updateTransform","__dirty","updateInnerText","forceUpdate","textEl","_textContent","textConfig","isLocal","local","attachedTransform","textAlign","textVerticalAlign","textStyleChanged","parent","innerOrigin","position","layoutRect","copy","getBoundingRect","applyTransform","align","verticalAlign","textOrigin","origin","relOriginX","relOriginY","width","height","textOffset","offset","isInside","inside","innerTextDefaultStyle","_innerTextDefaultStyle","textFill","textStroke","autoStroke","canBeInsideText","insideFill","insideStroke","getInsideTextFill","getInsideTextStroke","outsideFill","outsideStroke","getOutsideFill","getOutsideStroke","fill","stroke","setDefaultTextStyle","dirtyStyle","__zr","isDarkMode","backgroundColor","getBackgroundColor","colorArr","alpha","isDark","i","traverse","cb","context","attrKV","key","value","setTextConfig","setTextContent","setClipPath","extra","hide","show","keyOrObj","obj","keysArr","length","saveCurrentToNormalState","toState","_innerSaveToNormal","normalState","_normalState","animator","fromStateTransition","__fromStateTransition","targetName","target","saveFinalToTarget","_savePrimaryToNormal","primaryKeys","hasState","getState","name","ensureState","clearStates","noAnimation","useState","stateName","keepCurrentStates","forceUseHoverLayer","toNormalState","hasStates","animationCfg","stateTransition","state","stateProxy","useHoverLayer","hoverLayer","_toggleHoverLayerFlag","_applyStateObj","__inHover","duration","textContent","textGuide","_textGuide","push","_updateAnimationTargets","useStates","stateObjects","len","notChange","stateObj","lastStateObj","mergedState","_mergeStates","join","slice","changeTarget","removeState","idx","splice","replaceState","oldState","newState","forceAdd","newStateExists","toggleState","enable","mergedTextConfig","transition","needsRestoreToNormal","transitionTarget","hasTransition","propNeedsTransition","__changeFinalValue","_transitionState","_attachComponent","componentEl","__hostTarget","Error","zr","addSelfToZr","_detachComponent","removeSelfFromZr","getClipPath","_clipPath","clipPath","removeClipPath","getTextContent","previousTextContent","removeTextContent","cfg","removeTextConfig","getTextGuideLine","setTextGuideLine","guideLine","removeTextGuideLine","refreshHover","refresh","dirty","inHover","animation","addAnimator","removeAnimator","animate","loop","el","during","updateDuringAnimation","done","wakeUp","stopAnimation","scope","forwardToLast","leftAnimators","stop","animateTo","animationProps","animateFrom","getPaintRect","initDefaultProps","elProto","type","silent","isGroup","dragging","ignoreClip","logs","logDeprecatedError","xKey","yKey","console","warn","createLegacyProperty","privateKey","Object","defineProperty","get","pos","enhanceArray","set","self","val","browser","ie","version","animatable","reverse","animateToShallow","finishCount","doneHappened","cfgDone","cfgAborted","aborted","doneCb","abortedCb","percent","start","easing","force","copyArrShallow","source","is2DArray","copyValue","constructor","sourceArr","targetArr","len0","len1","Array","call","topKey","animatableKeys","changedKeys","targetKeys","delay","additive","setToFinal","animateAll","k","innerKey","keyLen","existsAnimators","existsAnimatorsOnSameTarget","allAborted","stopTracks","revertedSource","reversedTarget","sourceClone","whenWithKeys"],"mappings":"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","sourcesContent":["import Transformable from './core/Transformable';\nimport Animator, { cloneValue } from './animation/Animator';\nimport BoundingRect from './core/BoundingRect';\nimport Eventful from './core/Eventful';\nimport { calculateTextPosition, parsePercent } from './contain/text';\nimport { guid, isObject, keys, extend, indexOf, logError, mixin, isArrayLike, isTypedArray } from './core/util';\nimport { LIGHT_LABEL_COLOR, DARK_LABEL_COLOR } from './config';\nimport { parse, stringify } from './tool/color';\nimport env from './core/env';\nimport { REDARAW_BIT } from './graphic/constants';\nexport var PRESERVED_NORMAL_STATE = '__zr_normal__';\nvar PRIMARY_STATES_KEYS = ['x', 'y', 'scaleX', 'scaleY', 'originX', 'originY', 'rotation', 'ignore'];\nvar DEFAULT_ANIMATABLE_MAP = {\n    x: true,\n    y: true,\n    scaleX: true,\n    scaleY: true,\n    originX: true,\n    originY: true,\n    rotation: true,\n    ignore: false\n};\nvar tmpTextPosCalcRes = {};\nvar tmpBoundingRect = new BoundingRect(0, 0, 0, 0);\nvar Element = (function () {\n    function Element(props) {\n        this.id = guid();\n        this.animators = [];\n        this.currentStates = [];\n        this.states = {};\n        this._init(props);\n    }\n    Element.prototype._init = function (props) {\n        this.attr(props);\n    };\n    Element.prototype.drift = function (dx, dy, e) {\n        switch (this.draggable) {\n            case 'horizontal':\n                dy = 0;\n                break;\n            case 'vertical':\n                dx = 0;\n                break;\n        }\n        var m = this.transform;\n        if (!m) {\n            m = this.transform = [1, 0, 0, 1, 0, 0];\n        }\n        m[4] += dx;\n        m[5] += dy;\n        this.decomposeTransform();\n        this.markRedraw();\n    };\n    Element.prototype.beforeUpdate = function () { };\n    Element.prototype.afterUpdate = function () { };\n    Element.prototype.update = function () {\n        this.updateTransform();\n        if (this.__dirty) {\n            this.updateInnerText();\n        }\n    };\n    Element.prototype.updateInnerText = function (forceUpdate) {\n        var textEl = this._textContent;\n        if (textEl && (!textEl.ignore || forceUpdate)) {\n            if (!this.textConfig) {\n                this.textConfig = {};\n            }\n            var textConfig = this.textConfig;\n            var isLocal = textConfig.local;\n            var attachedTransform = textEl.attachedTransform;\n            var textAlign = void 0;\n            var textVerticalAlign = void 0;\n            var textStyleChanged = false;\n            if (isLocal) {\n                attachedTransform.parent = this;\n            }\n            else {\n                attachedTransform.parent = null;\n            }\n            var innerOrigin = false;\n            attachedTransform.x = textEl.x;\n            attachedTransform.y = textEl.y;\n            attachedTransform.originX = textEl.originX;\n            attachedTransform.originY = textEl.originY;\n            attachedTransform.rotation = textEl.rotation;\n            attachedTransform.scaleX = textEl.scaleX;\n            attachedTransform.scaleY = textEl.scaleY;\n            if (textConfig.position != null) {\n                var layoutRect = tmpBoundingRect;\n                if (textConfig.layoutRect) {\n                    layoutRect.copy(textConfig.layoutRect);\n                }\n                else {\n                    layoutRect.copy(this.getBoundingRect());\n                }\n                if (!isLocal) {\n                    layoutRect.applyTransform(this.transform);\n                }\n                if (this.calculateTextPosition) {\n                    this.calculateTextPosition(tmpTextPosCalcRes, textConfig, layoutRect);\n                }\n                else {\n                    calculateTextPosition(tmpTextPosCalcRes, textConfig, layoutRect);\n                }\n                attachedTransform.x = tmpTextPosCalcRes.x;\n                attachedTransform.y = tmpTextPosCalcRes.y;\n                textAlign = tmpTextPosCalcRes.align;\n                textVerticalAlign = tmpTextPosCalcRes.verticalAlign;\n                var textOrigin = textConfig.origin;\n                if (textOrigin && textConfig.rotation != null) {\n                    var relOriginX = void 0;\n                    var relOriginY = void 0;\n                    if (textOrigin === 'center') {\n                        relOriginX = layoutRect.width * 0.5;\n                        relOriginY = layoutRect.height * 0.5;\n                    }\n                    else {\n                        relOriginX = parsePercent(textOrigin[0], layoutRect.width);\n                        relOriginY = parsePercent(textOrigin[1], layoutRect.height);\n                    }\n                    innerOrigin = true;\n                    attachedTransform.originX = -attachedTransform.x + relOriginX + (isLocal ? 0 : layoutRect.x);\n                    attachedTransform.originY = -attachedTransform.y + relOriginY + (isLocal ? 0 : layoutRect.y);\n                }\n            }\n            if (textConfig.rotation != null) {\n                attachedTransform.rotation = textConfig.rotation;\n            }\n            var textOffset = textConfig.offset;\n            if (textOffset) {\n                attachedTransform.x += textOffset[0];\n                attachedTransform.y += textOffset[1];\n                if (!innerOrigin) {\n                    attachedTransform.originX = -textOffset[0];\n                    attachedTransform.originY = -textOffset[1];\n                }\n            }\n            var isInside = textConfig.inside == null\n                ? (typeof textConfig.position === 'string' && textConfig.position.indexOf('inside') >= 0)\n                : textConfig.inside;\n            var innerTextDefaultStyle = this._innerTextDefaultStyle || (this._innerTextDefaultStyle = {});\n            var textFill = void 0;\n            var textStroke = void 0;\n            var autoStroke = void 0;\n            if (isInside && this.canBeInsideText()) {\n                textFill = textConfig.insideFill;\n                textStroke = textConfig.insideStroke;\n                if (textFill == null || textFill === 'auto') {\n                    textFill = this.getInsideTextFill();\n                }\n                if (textStroke == null || textStroke === 'auto') {\n                    textStroke = this.getInsideTextStroke(textFill);\n                    autoStroke = true;\n                }\n            }\n            else {\n                textFill = textConfig.outsideFill;\n                textStroke = textConfig.outsideStroke;\n                if (textFill == null || textFill === 'auto') {\n                    textFill = this.getOutsideFill();\n                }\n                if (textStroke == null || textStroke === 'auto') {\n                    textStroke = this.getOutsideStroke(textFill);\n                    autoStroke = true;\n                }\n            }\n            textFill = textFill || '#000';\n            if (textFill !== innerTextDefaultStyle.fill\n                || textStroke !== innerTextDefaultStyle.stroke\n                || autoStroke !== innerTextDefaultStyle.autoStroke\n                || textAlign !== innerTextDefaultStyle.align\n                || textVerticalAlign !== innerTextDefaultStyle.verticalAlign) {\n                textStyleChanged = true;\n                innerTextDefaultStyle.fill = textFill;\n                innerTextDefaultStyle.stroke = textStroke;\n                innerTextDefaultStyle.autoStroke = autoStroke;\n                innerTextDefaultStyle.align = textAlign;\n                innerTextDefaultStyle.verticalAlign = textVerticalAlign;\n                textEl.setDefaultTextStyle(innerTextDefaultStyle);\n            }\n            textEl.__dirty |= REDARAW_BIT;\n            if (textStyleChanged) {\n                textEl.dirtyStyle(true);\n            }\n        }\n    };\n    Element.prototype.canBeInsideText = function () {\n        return true;\n    };\n    Element.prototype.getInsideTextFill = function () {\n        return '#fff';\n    };\n    Element.prototype.getInsideTextStroke = function (textFill) {\n        return '#000';\n    };\n    Element.prototype.getOutsideFill = function () {\n        return this.__zr && this.__zr.isDarkMode() ? LIGHT_LABEL_COLOR : DARK_LABEL_COLOR;\n    };\n    Element.prototype.getOutsideStroke = function (textFill) {\n        var backgroundColor = this.__zr && this.__zr.getBackgroundColor();\n        var colorArr = typeof backgroundColor === 'string' && parse(backgroundColor);\n        if (!colorArr) {\n            colorArr = [255, 255, 255, 1];\n        }\n        var alpha = colorArr[3];\n        var isDark = this.__zr.isDarkMode();\n        for (var i = 0; i < 3; i++) {\n            colorArr[i] = colorArr[i] * alpha + (isDark ? 0 : 255) * (1 - alpha);\n        }\n        colorArr[3] = 1;\n        return stringify(colorArr, 'rgba');\n    };\n    Element.prototype.traverse = function (cb, context) { };\n    Element.prototype.attrKV = function (key, value) {\n        if (key === 'textConfig') {\n            this.setTextConfig(value);\n        }\n        else if (key === 'textContent') {\n            this.setTextContent(value);\n        }\n        else if (key === 'clipPath') {\n            this.setClipPath(value);\n        }\n        else if (key === 'extra') {\n            this.extra = this.extra || {};\n            extend(this.extra, value);\n        }\n        else {\n            this[key] = value;\n        }\n    };\n    Element.prototype.hide = function () {\n        this.ignore = true;\n        this.markRedraw();\n    };\n    Element.prototype.show = function () {\n        this.ignore = false;\n        this.markRedraw();\n    };\n    Element.prototype.attr = function (keyOrObj, value) {\n        if (typeof keyOrObj === 'string') {\n            this.attrKV(keyOrObj, value);\n        }\n        else if (isObject(keyOrObj)) {\n            var obj = keyOrObj;\n            var keysArr = keys(obj);\n            for (var i = 0; i < keysArr.length; i++) {\n                var key = keysArr[i];\n                this.attrKV(key, keyOrObj[key]);\n            }\n        }\n        this.markRedraw();\n        return this;\n    };\n    Element.prototype.saveCurrentToNormalState = function (toState) {\n        this._innerSaveToNormal(toState);\n        var normalState = this._normalState;\n        for (var i = 0; i < this.animators.length; i++) {\n            var animator = this.animators[i];\n            var fromStateTransition = animator.__fromStateTransition;\n            if (fromStateTransition && fromStateTransition !== PRESERVED_NORMAL_STATE) {\n                continue;\n            }\n            var targetName = animator.targetName;\n            var target = targetName\n                ? normalState[targetName] : normalState;\n            animator.saveFinalToTarget(target);\n        }\n    };\n    Element.prototype._innerSaveToNormal = function (toState) {\n        var normalState = this._normalState;\n        if (!normalState) {\n            normalState = this._normalState = {};\n        }\n        if (toState.textConfig && !normalState.textConfig) {\n            normalState.textConfig = this.textConfig;\n        }\n        this._savePrimaryToNormal(toState, normalState, PRIMARY_STATES_KEYS);\n    };\n    Element.prototype._savePrimaryToNormal = function (toState, normalState, primaryKeys) {\n        for (var i = 0; i < primaryKeys.length; i++) {\n            var key = primaryKeys[i];\n            if (toState[key] != null && !(key in normalState)) {\n                normalState[key] = this[key];\n            }\n        }\n    };\n    Element.prototype.hasState = function () {\n        return this.currentStates.length > 0;\n    };\n    Element.prototype.getState = function (name) {\n        return this.states[name];\n    };\n    Element.prototype.ensureState = function (name) {\n        var states = this.states;\n        if (!states[name]) {\n            states[name] = {};\n        }\n        return states[name];\n    };\n    Element.prototype.clearStates = function (noAnimation) {\n        this.useState(PRESERVED_NORMAL_STATE, false, noAnimation);\n    };\n    Element.prototype.useState = function (stateName, keepCurrentStates, noAnimation, forceUseHoverLayer) {\n        var toNormalState = stateName === PRESERVED_NORMAL_STATE;\n        var hasStates = this.hasState();\n        if (!hasStates && toNormalState) {\n            return;\n        }\n        var currentStates = this.currentStates;\n        var animationCfg = this.stateTransition;\n        if (indexOf(currentStates, stateName) >= 0 && (keepCurrentStates || currentStates.length === 1)) {\n            return;\n        }\n        var state;\n        if (this.stateProxy && !toNormalState) {\n            state = this.stateProxy(stateName);\n        }\n        if (!state) {\n            state = (this.states && this.states[stateName]);\n        }\n        if (!state && !toNormalState) {\n            logError(\"State \" + stateName + \" not exists.\");\n            return;\n        }\n        if (!toNormalState) {\n            this.saveCurrentToNormalState(state);\n        }\n        var useHoverLayer = !!((state && state.hoverLayer) || forceUseHoverLayer);\n        if (useHoverLayer) {\n            this._toggleHoverLayerFlag(true);\n        }\n        this._applyStateObj(stateName, state, this._normalState, keepCurrentStates, !noAnimation && !this.__inHover && animationCfg && animationCfg.duration > 0, animationCfg);\n        var textContent = this._textContent;\n        var textGuide = this._textGuide;\n        if (textContent) {\n            textContent.useState(stateName, keepCurrentStates, noAnimation, useHoverLayer);\n        }\n        if (textGuide) {\n            textGuide.useState(stateName, keepCurrentStates, noAnimation, useHoverLayer);\n        }\n        if (toNormalState) {\n            this.currentStates = [];\n            this._normalState = {};\n        }\n        else {\n            if (!keepCurrentStates) {\n                this.currentStates = [stateName];\n            }\n            else {\n                this.currentStates.push(stateName);\n            }\n        }\n        this._updateAnimationTargets();\n        this.markRedraw();\n        if (!useHoverLayer && this.__inHover) {\n            this._toggleHoverLayerFlag(false);\n            this.__dirty &= ~REDARAW_BIT;\n        }\n        return state;\n    };\n    Element.prototype.useStates = function (states, noAnimation, forceUseHoverLayer) {\n        if (!states.length) {\n            this.clearStates();\n        }\n        else {\n            var stateObjects = [];\n            var currentStates = this.currentStates;\n            var len = states.length;\n            var notChange = len === currentStates.length;\n            if (notChange) {\n                for (var i = 0; i < len; i++) {\n                    if (states[i] !== currentStates[i]) {\n                        notChange = false;\n                        break;\n                    }\n                }\n            }\n            if (notChange) {\n                return;\n            }\n            for (var i = 0; i < len; i++) {\n                var stateName = states[i];\n                var stateObj = void 0;\n                if (this.stateProxy) {\n                    stateObj = this.stateProxy(stateName, states);\n                }\n                if (!stateObj) {\n                    stateObj = this.states[stateName];\n                }\n                if (stateObj) {\n                    stateObjects.push(stateObj);\n                }\n            }\n            var lastStateObj = stateObjects[len - 1];\n            var useHoverLayer = !!((lastStateObj && lastStateObj.hoverLayer) || forceUseHoverLayer);\n            if (useHoverLayer) {\n                this._toggleHoverLayerFlag(true);\n            }\n            var mergedState = this._mergeStates(stateObjects);\n            var animationCfg = this.stateTransition;\n            this.saveCurrentToNormalState(mergedState);\n            this._applyStateObj(states.join(','), mergedState, this._normalState, false, !noAnimation && !this.__inHover && animationCfg && animationCfg.duration > 0, animationCfg);\n            var textContent = this._textContent;\n            var textGuide = this._textGuide;\n            if (textContent) {\n                textContent.useStates(states, noAnimation, useHoverLayer);\n            }\n            if (textGuide) {\n                textGuide.useStates(states, noAnimation, useHoverLayer);\n            }\n            this._updateAnimationTargets();\n            this.currentStates = states.slice();\n            this.markRedraw();\n            if (!useHoverLayer && this.__inHover) {\n                this._toggleHoverLayerFlag(false);\n                this.__dirty &= ~REDARAW_BIT;\n            }\n        }\n    };\n    Element.prototype._updateAnimationTargets = function () {\n        for (var i = 0; i < this.animators.length; i++) {\n            var animator = this.animators[i];\n            if (animator.targetName) {\n                animator.changeTarget(this[animator.targetName]);\n            }\n        }\n    };\n    Element.prototype.removeState = function (state) {\n        var idx = indexOf(this.currentStates, state);\n        if (idx >= 0) {\n            var currentStates = this.currentStates.slice();\n            currentStates.splice(idx, 1);\n            this.useStates(currentStates);\n        }\n    };\n    Element.prototype.replaceState = function (oldState, newState, forceAdd) {\n        var currentStates = this.currentStates.slice();\n        var idx = indexOf(currentStates, oldState);\n        var newStateExists = indexOf(currentStates, newState) >= 0;\n        if (idx >= 0) {\n            if (!newStateExists) {\n                currentStates[idx] = newState;\n            }\n            else {\n                currentStates.splice(idx, 1);\n            }\n        }\n        else if (forceAdd && !newStateExists) {\n            currentStates.push(newState);\n        }\n        this.useStates(currentStates);\n    };\n    Element.prototype.toggleState = function (state, enable) {\n        if (enable) {\n            this.useState(state, true);\n        }\n        else {\n            this.removeState(state);\n        }\n    };\n    Element.prototype._mergeStates = function (states) {\n        var mergedState = {};\n        var mergedTextConfig;\n        for (var i = 0; i < states.length; i++) {\n            var state = states[i];\n            extend(mergedState, state);\n            if (state.textConfig) {\n                mergedTextConfig = mergedTextConfig || {};\n                extend(mergedTextConfig, state.textConfig);\n            }\n        }\n        if (mergedTextConfig) {\n            mergedState.textConfig = mergedTextConfig;\n        }\n        return mergedState;\n    };\n    Element.prototype._applyStateObj = function (stateName, state, normalState, keepCurrentStates, transition, animationCfg) {\n        var needsRestoreToNormal = !(state && keepCurrentStates);\n        if (state && state.textConfig) {\n            this.textConfig = extend({}, keepCurrentStates ? this.textConfig : normalState.textConfig);\n            extend(this.textConfig, state.textConfig);\n        }\n        else if (needsRestoreToNormal) {\n            if (normalState.textConfig) {\n                this.textConfig = normalState.textConfig;\n            }\n        }\n        var transitionTarget = {};\n        var hasTransition = false;\n        for (var i = 0; i < PRIMARY_STATES_KEYS.length; i++) {\n            var key = PRIMARY_STATES_KEYS[i];\n            var propNeedsTransition = transition && DEFAULT_ANIMATABLE_MAP[key];\n            if (state && state[key] != null) {\n                if (propNeedsTransition) {\n                    hasTransition = true;\n                    transitionTarget[key] = state[key];\n                }\n                else {\n                    this[key] = state[key];\n                }\n            }\n            else if (needsRestoreToNormal) {\n                if (normalState[key] != null) {\n                    if (propNeedsTransition) {\n                        hasTransition = true;\n                        transitionTarget[key] = normalState[key];\n                    }\n                    else {\n                        this[key] = normalState[key];\n                    }\n                }\n            }\n        }\n        if (!transition) {\n            for (var i = 0; i < this.animators.length; i++) {\n                var animator = this.animators[i];\n                var targetName = animator.targetName;\n                animator.__changeFinalValue(targetName\n                    ? (state || normalState)[targetName]\n                    : (state || normalState));\n            }\n        }\n        if (hasTransition) {\n            this._transitionState(stateName, transitionTarget, animationCfg);\n        }\n    };\n    Element.prototype._attachComponent = function (componentEl) {\n        if (componentEl.__zr && !componentEl.__hostTarget) {\n            throw new Error('Text element has been added to zrender.');\n        }\n        if (componentEl === this) {\n            throw new Error('Recursive component attachment.');\n        }\n        var zr = this.__zr;\n        if (zr) {\n            componentEl.addSelfToZr(zr);\n        }\n        componentEl.__zr = zr;\n        componentEl.__hostTarget = this;\n    };\n    Element.prototype._detachComponent = function (componentEl) {\n        if (componentEl.__zr) {\n            componentEl.removeSelfFromZr(componentEl.__zr);\n        }\n        componentEl.__zr = null;\n        componentEl.__hostTarget = null;\n    };\n    Element.prototype.getClipPath = function () {\n        return this._clipPath;\n    };\n    Element.prototype.setClipPath = function (clipPath) {\n        if (this._clipPath && this._clipPath !== clipPath) {\n            this.removeClipPath();\n        }\n        this._attachComponent(clipPath);\n        this._clipPath = clipPath;\n        this.markRedraw();\n    };\n    Element.prototype.removeClipPath = function () {\n        var clipPath = this._clipPath;\n        if (clipPath) {\n            this._detachComponent(clipPath);\n            this._clipPath = null;\n            this.markRedraw();\n        }\n    };\n    Element.prototype.getTextContent = function () {\n        return this._textContent;\n    };\n    Element.prototype.setTextContent = function (textEl) {\n        var previousTextContent = this._textContent;\n        if (previousTextContent === textEl) {\n            return;\n        }\n        if (previousTextContent && previousTextContent !== textEl) {\n            this.removeTextContent();\n        }\n        if (textEl.__zr && !textEl.__hostTarget) {\n            throw new Error('Text element has been added to zrender.');\n        }\n        textEl.attachedTransform = new Transformable();\n        this._attachComponent(textEl);\n        this._textContent = textEl;\n        this.markRedraw();\n    };\n    Element.prototype.setTextConfig = function (cfg) {\n        if (!this.textConfig) {\n            this.textConfig = {};\n        }\n        extend(this.textConfig, cfg);\n        this.markRedraw();\n    };\n    Element.prototype.removeTextConfig = function () {\n        this.textConfig = null;\n        this.markRedraw();\n    };\n    Element.prototype.removeTextContent = function () {\n        var textEl = this._textContent;\n        if (textEl) {\n            textEl.attachedTransform = null;\n            this._detachComponent(textEl);\n            this._textContent = null;\n            this._innerTextDefaultStyle = null;\n            this.markRedraw();\n        }\n    };\n    Element.prototype.getTextGuideLine = function () {\n        return this._textGuide;\n    };\n    Element.prototype.setTextGuideLine = function (guideLine) {\n        if (this._textGuide && this._textGuide !== guideLine) {\n            this.removeTextGuideLine();\n        }\n        this._attachComponent(guideLine);\n        this._textGuide = guideLine;\n        this.markRedraw();\n    };\n    Element.prototype.removeTextGuideLine = function () {\n        var textGuide = this._textGuide;\n        if (textGuide) {\n            this._detachComponent(textGuide);\n            this._textGuide = null;\n            this.markRedraw();\n        }\n    };\n    Element.prototype.markRedraw = function () {\n        this.__dirty |= REDARAW_BIT;\n        var zr = this.__zr;\n        if (zr) {\n            if (this.__inHover) {\n                zr.refreshHover();\n            }\n            else {\n                zr.refresh();\n            }\n        }\n        if (this.__hostTarget) {\n            this.__hostTarget.markRedraw();\n        }\n    };\n    Element.prototype.dirty = function () {\n        this.markRedraw();\n    };\n    Element.prototype._toggleHoverLayerFlag = function (inHover) {\n        this.__inHover = inHover;\n        var textContent = this._textContent;\n        var textGuide = this._textGuide;\n        if (textContent) {\n            textContent.__inHover = inHover;\n        }\n        if (textGuide) {\n            textGuide.__inHover = inHover;\n        }\n    };\n    Element.prototype.addSelfToZr = function (zr) {\n        this.__zr = zr;\n        var animators = this.animators;\n        if (animators) {\n            for (var i = 0; i < animators.length; i++) {\n                zr.animation.addAnimator(animators[i]);\n            }\n        }\n        if (this._clipPath) {\n            this._clipPath.addSelfToZr(zr);\n        }\n        if (this._textContent) {\n            this._textContent.addSelfToZr(zr);\n        }\n        if (this._textGuide) {\n            this._textGuide.addSelfToZr(zr);\n        }\n    };\n    Element.prototype.removeSelfFromZr = function (zr) {\n        this.__zr = null;\n        var animators = this.animators;\n        if (animators) {\n            for (var i = 0; i < animators.length; i++) {\n                zr.animation.removeAnimator(animators[i]);\n            }\n        }\n        if (this._clipPath) {\n            this._clipPath.removeSelfFromZr(zr);\n        }\n        if (this._textContent) {\n            this._textContent.removeSelfFromZr(zr);\n        }\n        if (this._textGuide) {\n            this._textGuide.removeSelfFromZr(zr);\n        }\n    };\n    Element.prototype.animate = function (key, loop) {\n        var target = key ? this[key] : this;\n        if (!target) {\n            logError('Property \"'\n                + key\n                + '\" is not existed in element '\n                + this.id);\n            return;\n        }\n        var animator = new Animator(target, loop);\n        this.addAnimator(animator, key);\n        return animator;\n    };\n    Element.prototype.addAnimator = function (animator, key) {\n        var zr = this.__zr;\n        var el = this;\n        animator.during(function () {\n            el.updateDuringAnimation(key);\n        }).done(function () {\n            var animators = el.animators;\n            var idx = indexOf(animators, animator);\n            if (idx >= 0) {\n                animators.splice(idx, 1);\n            }\n        });\n        this.animators.push(animator);\n        if (zr) {\n            zr.animation.addAnimator(animator);\n        }\n        zr && zr.wakeUp();\n    };\n    Element.prototype.updateDuringAnimation = function (key) {\n        this.markRedraw();\n    };\n    Element.prototype.stopAnimation = function (scope, forwardToLast) {\n        var animators = this.animators;\n        var len = animators.length;\n        var leftAnimators = [];\n        for (var i = 0; i < len; i++) {\n            var animator = animators[i];\n            if (!scope || scope === animator.scope) {\n                animator.stop(forwardToLast);\n            }\n            else {\n                leftAnimators.push(animator);\n            }\n        }\n        this.animators = leftAnimators;\n        return this;\n    };\n    Element.prototype.animateTo = function (target, cfg, animationProps) {\n        animateTo(this, target, cfg, animationProps);\n    };\n    Element.prototype.animateFrom = function (target, cfg, animationProps) {\n        animateTo(this, target, cfg, animationProps, true);\n    };\n    Element.prototype._transitionState = function (stateName, target, cfg, animationProps) {\n        var animators = animateTo(this, target, cfg, animationProps);\n        for (var i = 0; i < animators.length; i++) {\n            animators[i].__fromStateTransition = stateName;\n        }\n    };\n    Element.prototype.getBoundingRect = function () {\n        return null;\n    };\n    Element.prototype.getPaintRect = function () {\n        return null;\n    };\n    Element.initDefaultProps = (function () {\n        var elProto = Element.prototype;\n        elProto.type = 'element';\n        elProto.name = '';\n        elProto.ignore = false;\n        elProto.silent = false;\n        elProto.isGroup = false;\n        elProto.draggable = false;\n        elProto.dragging = false;\n        elProto.ignoreClip = false;\n        elProto.__inHover = false;\n        elProto.__dirty = REDARAW_BIT;\n        var logs = {};\n        function logDeprecatedError(key, xKey, yKey) {\n            if (!logs[key + xKey + yKey]) {\n                console.warn(\"DEPRECATED: '\" + key + \"' has been deprecated. use '\" + xKey + \"', '\" + yKey + \"' instead\");\n                logs[key + xKey + yKey] = true;\n            }\n        }\n        function createLegacyProperty(key, privateKey, xKey, yKey) {\n            Object.defineProperty(elProto, key, {\n                get: function () {\n                    logDeprecatedError(key, xKey, yKey);\n                    if (!this[privateKey]) {\n                        var pos = this[privateKey] = [];\n                        enhanceArray(this, pos);\n                    }\n                    return this[privateKey];\n                },\n                set: function (pos) {\n                    logDeprecatedError(key, xKey, yKey);\n                    this[xKey] = pos[0];\n                    this[yKey] = pos[1];\n                    this[privateKey] = pos;\n                    enhanceArray(this, pos);\n                }\n            });\n            function enhanceArray(self, pos) {\n                Object.defineProperty(pos, 0, {\n                    get: function () {\n                        return self[xKey];\n                    },\n                    set: function (val) {\n                        self[xKey] = val;\n                    }\n                });\n                Object.defineProperty(pos, 1, {\n                    get: function () {\n                        return self[yKey];\n                    },\n                    set: function (val) {\n                        self[yKey] = val;\n                    }\n                });\n            }\n        }\n        if (Object.defineProperty && (!env.browser.ie || env.browser.version > 8)) {\n            createLegacyProperty('position', '_legacyPos', 'x', 'y');\n            createLegacyProperty('scale', '_legacyScale', 'scaleX', 'scaleY');\n            createLegacyProperty('origin', '_legacyOrigin', 'originX', 'originY');\n        }\n    })();\n    return Element;\n}());\nmixin(Element, Eventful);\nmixin(Element, Transformable);\nfunction animateTo(animatable, target, cfg, animationProps, reverse) {\n    cfg = cfg || {};\n    var animators = [];\n    animateToShallow(animatable, '', animatable, target, cfg, animationProps, animators, reverse);\n    var finishCount = animators.length;\n    var doneHappened = false;\n    var cfgDone = cfg.done;\n    var cfgAborted = cfg.aborted;\n    var doneCb = function () {\n        doneHappened = true;\n        finishCount--;\n        if (finishCount <= 0) {\n            doneHappened\n                ? (cfgDone && cfgDone())\n                : (cfgAborted && cfgAborted());\n        }\n    };\n    var abortedCb = function () {\n        finishCount--;\n        if (finishCount <= 0) {\n            doneHappened\n                ? (cfgDone && cfgDone())\n                : (cfgAborted && cfgAborted());\n        }\n    };\n    if (!finishCount) {\n        cfgDone && cfgDone();\n    }\n    if (animators.length > 0 && cfg.during) {\n        animators[0].during(function (target, percent) {\n            cfg.during(percent);\n        });\n    }\n    for (var i = 0; i < animators.length; i++) {\n        var animator = animators[i];\n        if (doneCb) {\n            animator.done(doneCb);\n        }\n        if (abortedCb) {\n            animator.aborted(abortedCb);\n        }\n        animator.start(cfg.easing, cfg.force);\n    }\n    return animators;\n}\nfunction copyArrShallow(source, target, len) {\n    for (var i = 0; i < len; i++) {\n        source[i] = target[i];\n    }\n}\nfunction is2DArray(value) {\n    return isArrayLike(value[0]);\n}\nfunction copyValue(target, source, key) {\n    if (isArrayLike(source[key])) {\n        if (!isArrayLike(target[key])) {\n            target[key] = [];\n        }\n        if (isTypedArray(source[key])) {\n            var len = source[key].length;\n            if (target[key].length !== len) {\n                target[key] = new (source[key].constructor)(len);\n                copyArrShallow(target[key], source[key], len);\n            }\n        }\n        else {\n            var sourceArr = source[key];\n            var targetArr = target[key];\n            var len0 = sourceArr.length;\n            if (is2DArray(sourceArr)) {\n                var len1 = sourceArr[0].length;\n                for (var i = 0; i < len0; i++) {\n                    if (!targetArr[i]) {\n                        targetArr[i] = Array.prototype.slice.call(sourceArr[i]);\n                    }\n                    else {\n                        copyArrShallow(targetArr[i], sourceArr[i], len1);\n                    }\n                }\n            }\n            else {\n                copyArrShallow(targetArr, sourceArr, len0);\n            }\n            targetArr.length = sourceArr.length;\n        }\n    }\n    else {\n        target[key] = source[key];\n    }\n}\nfunction animateToShallow(animatable, topKey, source, target, cfg, animationProps, animators, reverse) {\n    var animatableKeys = [];\n    var changedKeys = [];\n    var targetKeys = keys(target);\n    var duration = cfg.duration;\n    var delay = cfg.delay;\n    var additive = cfg.additive;\n    var setToFinal = cfg.setToFinal;\n    var animateAll = !isObject(animationProps);\n    for (var k = 0; k < targetKeys.length; k++) {\n        var innerKey = targetKeys[k];\n        if (source[innerKey] != null\n            && target[innerKey] != null\n            && (animateAll || animationProps[innerKey])) {\n            if (isObject(target[innerKey]) && !isArrayLike(target[innerKey])) {\n                if (topKey) {\n                    if (!reverse) {\n                        source[innerKey] = target[innerKey];\n                        animatable.updateDuringAnimation(topKey);\n                    }\n                    continue;\n                }\n                animateToShallow(animatable, innerKey, source[innerKey], target[innerKey], cfg, animationProps && animationProps[innerKey], animators, reverse);\n            }\n            else {\n                animatableKeys.push(innerKey);\n                changedKeys.push(innerKey);\n            }\n        }\n        else if (!reverse) {\n            source[innerKey] = target[innerKey];\n            animatable.updateDuringAnimation(topKey);\n            changedKeys.push(innerKey);\n        }\n    }\n    var keyLen = animatableKeys.length;\n    if (keyLen > 0\n        || (cfg.force && !animators.length)) {\n        var existsAnimators = animatable.animators;\n        var existsAnimatorsOnSameTarget = [];\n        for (var i = 0; i < existsAnimators.length; i++) {\n            if (existsAnimators[i].targetName === topKey) {\n                existsAnimatorsOnSameTarget.push(existsAnimators[i]);\n            }\n        }\n        if (!additive && existsAnimatorsOnSameTarget.length) {\n            for (var i = 0; i < existsAnimatorsOnSameTarget.length; i++) {\n                var allAborted = existsAnimatorsOnSameTarget[i].stopTracks(changedKeys);\n                if (allAborted) {\n                    var idx = indexOf(existsAnimators, existsAnimatorsOnSameTarget[i]);\n                    existsAnimators.splice(idx, 1);\n                }\n            }\n        }\n        var revertedSource = void 0;\n        var reversedTarget = void 0;\n        var sourceClone = void 0;\n        if (reverse) {\n            reversedTarget = {};\n            if (setToFinal) {\n                revertedSource = {};\n            }\n            for (var i = 0; i < keyLen; i++) {\n                var innerKey = animatableKeys[i];\n                reversedTarget[innerKey] = source[innerKey];\n                if (setToFinal) {\n                    revertedSource[innerKey] = target[innerKey];\n                }\n                else {\n                    source[innerKey] = target[innerKey];\n                }\n            }\n        }\n        else if (setToFinal) {\n            sourceClone = {};\n            for (var i = 0; i < keyLen; i++) {\n                var innerKey = animatableKeys[i];\n                sourceClone[innerKey] = cloneValue(source[innerKey]);\n                copyValue(source, target, innerKey);\n            }\n        }\n        var animator = new Animator(source, false, additive ? existsAnimatorsOnSameTarget : null);\n        animator.targetName = topKey;\n        if (cfg.scope) {\n            animator.scope = cfg.scope;\n        }\n        if (setToFinal && revertedSource) {\n            animator.whenWithKeys(0, revertedSource, animatableKeys);\n        }\n        if (sourceClone) {\n            animator.whenWithKeys(0, sourceClone, animatableKeys);\n        }\n        animator.whenWithKeys(duration == null ? 500 : duration, reverse ? reversedTarget : target, animatableKeys).delay(delay || 0);\n        animatable.addAnimator(animator, topKey);\n        animators.push(animator);\n    }\n}\nexport default Element;\n"]},"metadata":{},"sourceType":"module"}