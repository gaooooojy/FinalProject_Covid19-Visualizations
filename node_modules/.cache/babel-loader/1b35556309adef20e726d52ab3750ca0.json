{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaooooojy\\\\Desktop\\\\project\\\\src\\\\line-chart\\\\line-chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport './line-chart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LineChart() {\n  _s();\n\n  const ref = useRef(null);\n  useEffect(() => {\n    new CovidLine(ref.current, \"Cumulative Cases\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"linecharts\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        paddingBottom: \"20px\",\n        textAlign: \"center\",\n        fontWeight: \"550\",\n        fontSize: \"20px\"\n      },\n      children: \"A Line Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      children: \"            \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LineChart, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c = LineChart;\n\nclass CovidLine {\n  constructor(div, title) {\n    this.div = div;\n    this.title = title;\n    this.add_tip();\n    this.handleData();\n  } // add_title() {\n  //     // title_text\n  //     this.svg\n  //         .append(\"text\")\n  //         .attr(\"x\", 5)\n  //         .attr(\"y\", 35)\n  //         .attr(\"class\", \"chart_title\")\n  //         .text(this.title)\n  //         .style(\"font-size\", \"1.2rem\");\n  //     //title_image\n  //\n  //     this.svg\n  //         .append(\"rect\")\n  //         .attr(\"x\", 0)\n  //         .attr(\"y\", 45)\n  //         .attr(\"width\", \"100%\")\n  //         .attr(\"height\", 0.2)\n  //         .attr(\"stroke\", \"lightgray\")\n  //         .attr(\"class\", \"chart_title_rect\");\n  // }\n\n\n  async handleData() {\n    let covid = await d3.json(\"./data.json\");\n    covid.forEach(d => d.date = d3.timeParse(\"%Y-%W\")(d.year_week));\n    let cases = covid.filter(d => d.indicator === \"cases\");\n    this.lineData = d3.rollups(cases, d => d3.sum(d, v => +v.cumulative_count), d => d.date).sort((a, b) => {\n      return a[0] > b[0] ? 1 : -1;\n    });\n    this.initSvg(); //this.add_title();\n\n    this.draw_chart();\n  }\n\n  add_tip() {\n    d3.select(\"body\").selectAll('.d3-tip').data([0]).join(\"div\").attr(\"class\", \"d3-tip\").style(\"display\", \"none\");\n  }\n\n  initSvg() {\n    this.init_margin();\n    this.init_chart_area();\n    this.init_label();\n    this.init_scale();\n    this.init_axis();\n  }\n\n  init_margin() {\n    let div = d3.select(this.div);\n    this.getWH(div);\n    this.margin = {\n      left: 100,\n      right: 20,\n      top: 60,\n      bottom: 60\n    };\n    this.innerW = this.width - this.margin.left - this.margin.right;\n    this.innerH = this.height - this.margin.top - this.margin.bottom;\n    div.selectAll(\"*\").remove();\n    this.svg = div.append(\"svg\").attr(\"width\", \"1050px\").attr(\"height\", \"720px\");\n  }\n\n  getWH(node) {\n    this.width = node.node().getBoundingClientRect().width;\n    this.height = node.node().getBoundingClientRect().height;\n  }\n\n  init_chart_area() {\n    this.ChartArea = this.svg.append(\"g\").attr(\"width\", \"950px\").attr(\"transform\", `translate(${this.margin.left},${this.margin.top})`);\n    this.DrawArea = this.ChartArea.append(\"g\");\n    this.add_guide_line();\n  }\n\n  init_label() {\n    this.ChartArea.append(\"text\").attr(\"transform\", `translate(${this.innerW / 2},${this.innerH + 30})`).text(\"date\");\n    this.ChartArea.append(\"text\").attr(\"transform\", `translate(${-this.margin.left + 10},${this.innerH / 4}) rotate(90)`).text(\"Cumulative Cases\");\n  }\n\n  init_scale() {\n    this.x = d3.scaleTime().range([0, this.innerW]).domain(d3.extent(this.lineData, d => d[0]));\n    this.y = d3.scaleLinear().range([this.innerH, 0]).domain([0, d3.max(this.lineData, d => d[1])]);\n  }\n\n  init_axis() {\n    this.AxisY = this.ChartArea.append(\"g\");\n    this.AxisX = this.ChartArea.append(\"g\").attr(\"transform\", `translate(0,${this.innerH})`);\n    this.AxisX.call(d3.axisBottom(this.x).ticks(20)); //.tickFormat(d3.timeFormat('%x')).\n\n    this.AxisY.call(d3.axisLeft(this.y));\n  }\n\n  draw_chart() {\n    this.draw_line();\n    this.draw_circle();\n    this.draw_area();\n  }\n\n  draw_line() {\n    this.line = d3.line().x(d => this.x(d[0])).y(d => this.y(d[1]));\n    this.DrawArea.append(\"path\").datum(this.lineData).attr(\"d\", this.line).attr(\"stroke\", \"red\").attr(\"stroke-width\", 3).attr(\"fill\", \"none\");\n  }\n\n  draw_circle() {\n    this.DrawArea.selectAll(\"circle\").data(this.lineData).join(\"circle\").attr(\"cx\", d => this.x(d[0])).attr(\"cy\", d => this.y(d[1])).attr(\"r\", 1).attr(\"stroke\", \"red\").attr(\"stroke-width\", 1).attr(\"fill\", \"blue\").on(\"mouseover\", (e, v) => {\n      // add mouseover event reference: https://www.d3-graph-gallery.com/graph/interactivity_tooltip.html\n      d3.select(\".tip\").style(\"display\", \"block\").style(\"position\", \"absolute\").style(\"top\", e.pageY + \"px\").style(\"left\", e.pageX + \"px\").style(\"background-color\", \"white\").style(\"padding\", \"5px\").html(` <section><div class=\"popuppage\"><li>${d3.timeFormat(\"%x\")(v[0])}</li><li><strong>${d3.format(\".1f\")(v[1])}</strong></li></div></section>`);\n    }) // add mouseout event\n    .on(\"mouseout\", () => {\n      d3.select(\".tip\").style(\"display\", \"none\");\n    });\n  }\n\n  draw_area() {\n    const area = d3.area().x(d => this.x(d[0])).y1(d => this.y(d[1])).y0(this.y(0));\n    this.DrawArea.append(\"path\").datum(this.lineData).attr(\"d\", area).attr(\"stroke\", \"red\").attr(\"fill\", \"red\").attr('opacity', 0.1).on('mousemove', (e, d) => {\n      var _d$find;\n\n      let time_format = d3.timeFormat('%Y-%W');\n      let x_position = e.offsetX - this.margin.left;\n      let date = time_format(this.x.invert(x_position));\n      let value = (_d$find = d.find(d => time_format(d[0]) === date)) === null || _d$find === void 0 ? void 0 : _d$find[1];\n      this.tips_show(e, [date, value]); // this.guide_line\n\n      this.guide_line.attr('x1', x_position).attr('x2', x_position).attr('y1', this.innerH).attr('y2', this.y(value)).attr('stroke', 'gray').attr('stroke-width', 0.4);\n    }).on('mouseout', () => {\n      d3.select(\".d3-tip\").style(\"display\", \"none\");\n      this.guide_line.attr('stroke-width', 0);\n    });\n  }\n\n  tips_show(e, [date, value]) {\n    d3.select(\".d3-tip\").style(\"display\", \"block\").style(\"position\", \"absolute\").style(\"top\", `${e.y > this.height * 0.8 ? this.height * 0.8 : e.y}px`).style(\"left\", `${e.x}px`).html(() => ` <section>\n          <div>\n          <p>date:${date}</p>\n              <p>cases:<strong>${value}</strong></p>\n            </div>\n          </section>`);\n  }\n\n  add_guide_line() {\n    this.guide_line = this.DrawArea.append('line');\n  }\n\n}\n\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["C:/Users/gaooooojy/Desktop/project/src/line-chart/line-chart.js"],"names":["React","useRef","useEffect","d3","LineChart","ref","CovidLine","current","paddingBottom","textAlign","fontWeight","fontSize","constructor","div","title","add_tip","handleData","covid","json","forEach","d","date","timeParse","year_week","cases","filter","indicator","lineData","rollups","sum","v","cumulative_count","sort","a","b","initSvg","draw_chart","select","selectAll","data","join","attr","style","init_margin","init_chart_area","init_label","init_scale","init_axis","getWH","margin","left","right","top","bottom","innerW","width","innerH","height","remove","svg","append","node","getBoundingClientRect","ChartArea","DrawArea","add_guide_line","text","x","scaleTime","range","domain","extent","y","scaleLinear","max","AxisY","AxisX","call","axisBottom","ticks","axisLeft","draw_line","draw_circle","draw_area","line","datum","on","e","pageY","pageX","html","timeFormat","format","area","y1","y0","time_format","x_position","offsetX","invert","value","find","tips_show","guide_line"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react'\r\nimport * as d3 from 'd3'\r\nimport './line-chart.css'\r\nfunction LineChart() {\r\n\r\n    const ref = useRef(null)\r\n    useEffect(() => {\r\n        new CovidLine(ref.current, \"Cumulative Cases\")\r\n    }, [])\r\n\r\n    return (\r\n        <section id=\"linecharts\">\r\n            <p style={{paddingBottom:\"20px\", textAlign:\"center\", fontWeight:\"550\", fontSize: \"20px\"}}>\r\n                A Line Chart</p>\r\n            <div ref={ref}>            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nclass CovidLine {\r\n    constructor(div, title) {\r\n        this.div = div;\r\n        this.title = title\r\n        this.add_tip();\r\n\r\n        this.handleData();\r\n\r\n    }\r\n    // add_title() {\r\n    //     // title_text\r\n    //     this.svg\r\n    //         .append(\"text\")\r\n    //         .attr(\"x\", 5)\r\n    //         .attr(\"y\", 35)\r\n    //         .attr(\"class\", \"chart_title\")\r\n    //         .text(this.title)\r\n    //         .style(\"font-size\", \"1.2rem\");\r\n    //     //title_image\r\n    //\r\n    //     this.svg\r\n    //         .append(\"rect\")\r\n    //         .attr(\"x\", 0)\r\n    //         .attr(\"y\", 45)\r\n    //         .attr(\"width\", \"100%\")\r\n    //         .attr(\"height\", 0.2)\r\n    //         .attr(\"stroke\", \"lightgray\")\r\n    //         .attr(\"class\", \"chart_title_rect\");\r\n    // }\r\n    async handleData() {\r\n\r\n        let covid = await d3.json(\"./data.json\");\r\n        covid.forEach((d) => (d.date = d3.timeParse(\"%Y-%W\")(d.year_week)));\r\n        let cases = covid.filter((d) => d.indicator === \"cases\");\r\n\r\n        this.lineData = d3\r\n            .rollups(\r\n                cases,\r\n                (d) => d3.sum(d, (v) => +v.cumulative_count),\r\n                (d) => d.date\r\n            )\r\n            .sort((a, b) => {\r\n                return a[0] > b[0] ? 1 : -1;\r\n            });\r\n\r\n        this.initSvg();\r\n        //this.add_title();\r\n        this.draw_chart();\r\n    }\r\n    add_tip() {\r\n\r\n        d3.select(\"body\").selectAll('.d3-tip').data([0])\r\n            .join(\"div\")\r\n            .attr(\"class\", \"d3-tip\")\r\n            .style(\"display\", \"none\");\r\n\r\n    }\r\n    initSvg() {\r\n        this.init_margin();\r\n        this.init_chart_area();\r\n        this.init_label();\r\n        this.init_scale();\r\n        this.init_axis();\r\n    }\r\n    init_margin() {\r\n        let div = d3.select(this.div);\r\n        this.getWH(div);\r\n        this.margin = { left: 100, right: 20, top: 60, bottom: 60 };\r\n        this.innerW = this.width - this.margin.left - this.margin.right;\r\n        this.innerH = this.height - this.margin.top - this.margin.bottom;\r\n        div.selectAll(\"*\").remove();\r\n        this.svg = div\r\n            .append(\"svg\")\r\n            .attr(\"width\", \"1050px\")\r\n            .attr(\"height\", \"720px\");\r\n    }\r\n    getWH(node) {\r\n        this.width = node.node().getBoundingClientRect().width;\r\n        this.height = node.node().getBoundingClientRect().height;\r\n    }\r\n    init_chart_area() {\r\n        this.ChartArea = this.svg\r\n            .append(\"g\")\r\n            .attr(\"width\", \"950px\")\r\n            .attr(\"transform\", `translate(${this.margin.left},${this.margin.top})`);\r\n        this.DrawArea = this.ChartArea.append(\"g\");\r\n        this.add_guide_line()\r\n    }\r\n    init_label() {\r\n        this.ChartArea.append(\"text\")\r\n            .attr(\"transform\", `translate(${this.innerW / 2},${this.innerH + 30})`)\r\n            .text(\"date\");\r\n        this.ChartArea.append(\"text\")\r\n            .attr(\r\n                \"transform\",\r\n                `translate(${-this.margin.left + 10},${this.innerH / 4}) rotate(90)`\r\n            )\r\n            .text(\"Cumulative Cases\");\r\n    }\r\n    init_scale() {\r\n        this.x = d3\r\n            .scaleTime()\r\n            .range([0, this.innerW])\r\n            .domain(d3.extent(this.lineData, (d) => d[0]));\r\n        this.y = d3\r\n            .scaleLinear()\r\n            .range([this.innerH, 0])\r\n            .domain([0, d3.max(this.lineData, (d) => d[1])]);\r\n    }\r\n    init_axis() {\r\n        this.AxisY = this.ChartArea.append(\"g\");\r\n        this.AxisX = this.ChartArea.append(\"g\").attr(\r\n            \"transform\",\r\n            `translate(0,${this.innerH})`\r\n        );\r\n\r\n        this.AxisX.call(d3.axisBottom(this.x).ticks(20));//.tickFormat(d3.timeFormat('%x')).\r\n        this.AxisY.call(d3.axisLeft(this.y));\r\n    }\r\n\r\n    draw_chart() {\r\n        this.draw_line()\r\n        this.draw_circle()\r\n        this.draw_area()\r\n    }\r\n    draw_line() {\r\n        this.line = d3\r\n            .line()\r\n            .x((d) => this.x(d[0]))\r\n            .y((d) => this.y(d[1]));\r\n        this.DrawArea.append(\"path\")\r\n            .datum(this.lineData)\r\n            .attr(\"d\", this.line)\r\n            .attr(\"stroke\", \"red\")\r\n            .attr(\"stroke-width\", 3)\r\n            .attr(\"fill\", \"none\");\r\n\r\n    }\r\n    draw_circle() {\r\n\r\n        this.DrawArea.selectAll(\"circle\")\r\n            .data(this.lineData)\r\n            .join(\"circle\")\r\n            .attr(\"cx\", (d) => this.x(d[0]))\r\n            .attr(\"cy\", (d) => this.y(d[1]))\r\n            .attr(\"r\", 1)\r\n            .attr(\"stroke\", \"red\")\r\n            .attr(\"stroke-width\", 1)\r\n            .attr(\"fill\", \"blue\")\r\n            .on(\"mouseover\", (e, v) => {\r\n                // add mouseover event reference: https://www.d3-graph-gallery.com/graph/interactivity_tooltip.html\r\n                d3.select(\".tip\")\r\n                    .style(\"display\", \"block\")\r\n                    .style(\"position\", \"absolute\")\r\n                    .style(\"top\", e.pageY + \"px\")\r\n                    .style(\"left\", e.pageX + \"px\")\r\n                    .style(\"background-color\", \"white\")\r\n                    .style(\"padding\", \"5px\")\r\n                    .html(\r\n                        ` <section><div class=\"popuppage\"><li>${d3.timeFormat(\"%x\")(v[0])}</li><li><strong>${d3.format(\r\n                            \".1f\"\r\n                        )(v[1])}</strong></li></div></section>`\r\n                    );\r\n            })\r\n            // add mouseout event\r\n            .on(\"mouseout\", () => {\r\n                d3.select(\".tip\").style(\"display\", \"none\");\r\n            })\r\n    }\r\n    draw_area() {\r\n        const area = d3.area()\r\n            .x(d => this.x(d[0]))\r\n            .y1(d => this.y(d[1]))\r\n            .y0(this.y(0));\r\n        this.DrawArea.append(\"path\")\r\n            .datum(this.lineData)\r\n            .attr(\"d\", area)\r\n            .attr(\"stroke\", \"red\")\r\n            .attr(\"fill\", \"red\")\r\n            .attr('opacity', 0.1)\r\n            .on('mousemove', (e, d) => {\r\n                let time_format = d3.timeFormat('%Y-%W')\r\n                let x_position = e.offsetX - this.margin.left\r\n                let date = time_format(this.x.invert(x_position))\r\n                let value = d.find(d => time_format(d[0]) === date)?.[1]\r\n                this.tips_show(e, [date, value])\r\n                // this.guide_line\r\n                this.guide_line.attr('x1', x_position).attr('x2', x_position)\r\n                    .attr('y1', this.innerH).attr('y2', this.y(value))\r\n                    .attr('stroke', 'gray')\r\n                    .attr('stroke-width', 0.4)\r\n\r\n            })\r\n            .on('mouseout', () => {\r\n                    d3.select(\".d3-tip\").style(\"display\", \"none\");\r\n                    this.guide_line.attr('stroke-width', 0)\r\n                }\r\n            )\r\n\r\n    }\r\n    tips_show(e, [date, value]) {\r\n        d3.select(\".d3-tip\")\r\n            .style(\"display\", \"block\")\r\n            .style(\"position\", \"absolute\")\r\n            .style(\"top\", `${e.y > this.height * 0.8 ? this.height * 0.8 : e.y}px`)\r\n            .style(\"left\", `${e.x}px`)\r\n            .html(\r\n                () => ` <section>\r\n          <div>\r\n          <p>date:${date}</p>\r\n              <p>cases:<strong>${value}</strong></p>\r\n            </div>\r\n          </section>`\r\n            );\r\n    }\r\n\r\n    add_guide_line() {\r\n        this.guide_line = this.DrawArea.append('line')\r\n    }\r\n\r\n}\r\n\r\nexport default LineChart\r\n"]},"metadata":{},"sourceType":"module"}